[{"/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/index.js":"1","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/App.js":"2","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/reportWebVitals.js":"3","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/Subjects.js":"4","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/Main.js":"5","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/Topics.js":"6","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/Questions.js":"7","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/AddQuestions.js":"8","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/EditQuestion.js":"9","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/Login.js":"10","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/LibPagination.js":"11"},{"size":517,"mtime":1644899404994,"results":"12","hashOfConfig":"13"},{"size":1093,"mtime":1644899404994,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1644899404994,"results":"15","hashOfConfig":"13"},{"size":10539,"mtime":1644916903123,"results":"16","hashOfConfig":"13"},{"size":2177,"mtime":1644899404994,"results":"17","hashOfConfig":"13"},{"size":11845,"mtime":1644916972271,"results":"18","hashOfConfig":"13"},{"size":10576,"mtime":1644917066126,"results":"19","hashOfConfig":"13"},{"size":23044,"mtime":1644906378945,"results":"20","hashOfConfig":"13"},{"size":22064,"mtime":1644899546232,"results":"21","hashOfConfig":"13"},{"size":6980,"mtime":1644899404994,"results":"22","hashOfConfig":"13"},{"size":1319,"mtime":1644916234784,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"12as3tn",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/index.js",[],["51","52"],"/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/App.js",["53"],"import './App.css';\r\nimport React from 'react';\r\nimport Main from './components/Main';\r\nimport Questions from './components/Questions';\r\nimport Subjects from './components/Subjects';\r\nimport Topics from './components/Topics';\r\nimport './components/Style.css';\r\n\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route\r\n} from 'react-router-dom';\r\nimport AddQuestions from './components/AddQuestions';\r\nimport EditQuestion from './components/EditQuestion';\r\nimport Login from './components/Login';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n      <div className='main-nav-bar'>\r\n      <Routes>\r\n      < Route path='/' element={<Login/>} />\r\n          < Route path='/questions' element={<Questions/>} />\r\n          < Route path='/subjects' element={<Subjects />} />\r\n          < Route path='/topics' element={<Topics />} />\r\n          < Route path='/add_question' element={<AddQuestions />} />\r\n          < Route path='/edit/:Qid' element={<EditQuestion />} />\r\n        </Routes>\r\n      </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/reportWebVitals.js",[],"/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/Subjects.js",["54","55","56","57","58","59","60","61","62","63","64","65"],"/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/Main.js",["66"],"import axios from \"axios\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nfunction Main() {\r\n  const navigate = useNavigate();\r\n  const tokenKey=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWRkMjgwYWU2ZDdkNzdjOGU0ZjY4ZjYiLCJfYWN0aXZlT3JnIjoiNjE5Y2U0YThlNTg2ODUxNDYxMGM4ZGE3IiwiaWF0IjoxNjQ0NjM0OTgzLCJleHAiOjE2NDQ2NzgxODN9.le4MGo4ez8yObUl3NgZ5eiVrAc0GWJ9hwVmdX1O-xWk\"\r\n  const logout = () => {\r\n    axios\r\n      .get(`http://admin.liveexamcenter.in/api/auth/logout`, {\r\n        headers: { authorization: tokenKey },\r\n      })\r\n      .then((response) => {\r\n        localStorage.removeItem(\"_activeUser\");\r\n        navigate(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"_activeUser\")) navigate(\"/\");\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-md navbar-light bg-dark fixed-top\">\r\n        <div\r\n          className=\"collapse navbar-collapse justify-content-between\"\r\n          id=\"nav\"\r\n        >\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                id=\"RouterNavLink\"\r\n                className=\"nav-link text-light font-weight-light\"\r\n                to=\"/questions\"\r\n              >\r\n                Questions\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                id=\"RouterNavLink\"\r\n                className=\"nav-link text-light font-weight-light\"\r\n                to=\"/subjects\"\r\n              >\r\n                Subjects\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                id=\"RouterNavLink\"\r\n                className=\"nav-link text-light font-weight-light\"\r\n                to=\"/topics\"\r\n              >\r\n                Topics\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n\r\n          <button type=\"button\" onClick={logout} style={{ float: \"right\" }}>\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/Topics.js",["67","68","69","70","71","72","73","74","75","76","77","78"],"/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/Questions.js",["79","80","81","82","83","84","85"],"/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/AddQuestions.js",["86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113"],"/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/EditQuestion.js",["114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport Main from \"./Main\";\n\nfunction EditQuestion() {\n  const { Qid } = useParams();\n  const navigate = useNavigate();\n  const [richEditorQ, setRichEditorQ] = useState(\"Enable\");\n  const [queAPI, setQueAPI] = useState([]);\n  const [subAPI, setSubAPI] = useState([]);\n  const [topicAPI, setTopicAPI] = useState([]);\n  const [isloading, setIsLoading] = useState(false);\n  const [richTextEditFlag, setRichTextEditFlag] = useState([]);\n  const tokenKey =\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWRkMjgwYWU2ZDdkNzdjOGU0ZjY4ZjYiLCJfYWN0aXZlT3JnIjoiNjE5Y2U0YThlNTg2ODUxNDYxMGM4ZGE3IiwiaWF0IjoxNjQ0ODk5NDUwLCJleHAiOjE2NDQ5NDI2NTB9.hIb1vv07n1FOH_V1aQVy8rE3aoq6Xj6qscx52HYpx08\";\n  const [optionArr, setOptionArr] = useState([]);\n  const [validate, setValidate] = useState({});\n  const [validateOpt, setValidateOpt] = useState({});\n  const [validateSameQ, setValidateSameQ] = useState({});\n  const [formErrorsOpt, setFormErrorsOpt] = useState([]);\n  const [isSubmit, setIsSubmit] = useState(false);\n\n  const [formData, setFormData] = useState({\n    subject: \"\",\n    topic: \"\",\n    type: \"MULTIPLE CHOICE\",\n    questionText: \"\",\n    DiffLevel: \"easy\",\n    rightMarks: 1,\n    wrongMarks: 0,\n    options: null,\n  });\n  useEffect(() => {\n    axios\n      .get(`http://admin.liveexamcenter.in/api/questions/${Qid}`, {\n        headers: { authorization: tokenKey },\n      })\n      .then((response) => {\n        console.log(response.data);\n        //setQidData({...response.data});\n        setFormData({\n          ...formData,\n          subject: response.data.subject._id,\n          topic: response.data.topic._id,\n          type: response.data.type,\n          questionText: response.data.questionText,\n          DiffLevel: response.data.diffLevel,\n          rightMarks: response.data.rightMarks,\n          wrongMarks: response.data.wrongMarks,\n        });\n\n        setOptionArr([...response.data.options]);\n\n        setIsLoading(true);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [Qid]);\n  isloading && console.log(optionArr);\n\n  useEffect(() => {}, [optionArr]);\n\n  //subject api call\n  useEffect(() => {\n    axios\n      .get(`http://admin.liveexamcenter.in/api/subjects?page=1&limit=5&term=`, {\n        headers: { authorization: tokenKey },\n      })\n      .then((res) => {\n        setSubAPI(res.data.result);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  //Read API for Topics\n  useEffect(() => {\n    axios\n      .get(`http://admin.liveexamcenter.in/api/topics?page=1&limit=5&term=`, {\n        headers: { authorization: tokenKey },\n      })\n      .then((res) => {\n        setTopicAPI(res.data.result);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  // useEffect(()=>{\n  //     //to deselect the option when question type changes\n  //      setOptionArr(tempOptionArr);\n\n  // },[formData.type])\n\n  useEffect(() => {\n    //to add the option array to formdata\n    setFormData({ ...formData, options: optionArr });\n  }, [optionArr]);\n\n  const onChangeHandler = (e) => {\n    const ename = e.target.name;\n    const regex = /^[0-9\\b]+$/;\n    if (\n      (e.target.name == \"rightMarks\" || e.target.name == \"wrongMarks\") &&\n      e.target.value != \"\"\n    ) {\n      setFormData({\n        ...formData,\n        [ename]: regex.test(e.target.value) ? parseInt(e.target.value) : \"\",\n      });\n    } else setFormData({ ...formData, [ename]: e.target.value });\n\n    if (e.target.value == \"\") {\n      setValidate({ ...validate, [ename]: `${ename} is Required` });\n    } else {\n      setValidate({ ...validate, [ename]: \"\" });\n    }\n  };\n\n  function removeOption(index) {\n    //\n    const tempArr = [...optionArr];\n    tempArr.splice(index, 1);\n    setOptionArr(tempArr);\n  }\n  //console.log(optionArr)\n\n  const changeOptions = (i, input) => {\n    setOptionArr((prev) =>\n      prev.map((option, ind) =>\n        i == ind ? { ...option, option: input } : option\n      )\n    );\n    setFormData({ ...formData, options: optionArr });\n    if (input == \"\") {\n      setValidateOpt({ ...validateOpt, [i]: { option: \"option is required\" } });\n    } else {\n      setValidateOpt({ ...validateOpt, [i]: \"\" });\n    }\n  };\n  isloading && console.log(formData);\n  const SubmitForm = (e) => {\n    e.preventDefault();\n    // let navigate = Navigate();\n    axios\n      .put(`http://admin.liveexamcenter.in/api/questions/${Qid}`, formData, {\n        headers: { authorization: tokenKey },\n      })\n      .then((res) => {\n        console.log(res.data);\n        navigate(\"/questions\");\n        // setTopicAPI(res.data.result)\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    console.log(optionArr);\n    console.log(formData);\n  };\n\n  const checkBoxOption = (i, e) => {\n    //To check option is checked or not and accordingly set value of iscorrect\n    e.checked == true\n      ? setOptionArr((prev) =>\n          prev.map((isCorrect, ind) =>\n            i == ind ? { ...isCorrect, isCorrect: true } : isCorrect\n          )\n        )\n      : setOptionArr((prev) =>\n          prev.map((isCorrect, ind) =>\n            i == ind ? { ...isCorrect, isCorrect: false } : isCorrect\n          )\n        );\n  };\n\n  const radioBoxOption = (i, e) => {\n    //To check option is checked or not and accordingly set value of iscorrect\n    e.checked == true\n      ? setOptionArr((prev) =>\n          prev.map((isCorrect, ind) =>\n            i == ind\n              ? { ...isCorrect, isCorrect: true }\n              : { ...isCorrect, isCorrect: false }\n          )\n        )\n      : setOptionArr((prev) =>\n          prev.map((isCorrect, ind) =>\n            i == ind ? { ...isCorrect, isCorrect: false } : isCorrect\n          )\n        );\n  };\n\n  const newOption = () => {\n    const temp = [\n      ...optionArr,\n      { isCorrect: false, option: \"\", richTextEditor: false },\n    ];\n    setOptionArr(temp);\n  };\n  const changeRichTextQ = () => {\n    richEditorQ == \"Enable\"\n      ? setRichEditorQ(\"Disable\")\n      : setRichEditorQ(\"Enable\");\n  };\n  const changeRichText = (i) => {\n    // setOptIndex(val)\n    // richEditor == \"Enable\" ? setRichEditor(\"Disable\") : setRichEditor(\"Enable\");\n    setOptionArr((prev) =>\n      prev.map((opt, j) =>\n        i === j\n          ? {\n              ...opt,\n              richTextEditor: opt.richTextEditor == true ? false : true,\n            }\n          : opt\n      )\n    );\n  };\n  const onChangeHandlerEditor = (e) => {\n    setFormData({ ...formData, questionText: e });\n  };\n  const onChangeHandlerEditorOp = (e, i) => {\n    console.log(e);\n    setOptionArr((prev) =>\n      prev.map((opt, j) => (i === j ? { ...opt, option: e } : opt))\n    );\n  };\n\n  useEffect(() => {\n    if (isloading) {\n      let temp = optionArr.map((e) => {\n        e.richTextEditor = false;\n        return e;\n      });\n      setOptionArr(temp);\n    } else return;\n  }, [isloading]);\n  return (\n    <div>\n      <Main />\n      {isloading && (\n        <div className=\"add-div\">\n          <div className=\"add-header\">\n            <h3>Edit question</h3>\n          </div>\n          <pre>{JSON.stringify(formData, undefined, 2)}</pre>\n          <form onSubmit={SubmitForm} id=\"myForm\">\n            {/* middle part of add question page */}\n            <div className=\"add-main\">\n              {/* for select subject and topic */}\n              <div className=\"add-main-row\">\n                {/* for subject */}\n                <div style={{ flex: \"1\" }} className=\"add-main-row1-col1\">\n                  <label>Select Subject</label>\n                  <br />\n                  <select\n                    className=\"add-select\"\n                    name=\"subject\"\n                    value={formData.subject}\n                    onChange={onChangeHandler}\n                    required\n                  >\n                    {subAPI &&\n                      subAPI.map((subject, i) => {\n                        return (\n                          <option key={i} value={subject._id}>\n                            {subject.name}\n                          </option>\n                        );\n                      })}\n                  </select>\n                  <span style={{ color: \"red\" }}>{validate.subject}</span>\n                </div>\n                {/* for topic */}\n                <div style={{ flex: \"1\" }} className=\"add-main-row1-col1\">\n                  <label>Select Topic</label>\n                  <br />\n                  <select\n                    className=\"add-select\"\n                    name=\"topic\"\n                    value={formData.topic}\n                    onChange={onChangeHandler}\n                  >\n                    {/* <option value={QidData.topic && QidData.topic._id} >{QidData.topic && QidData.topic.name}</option>  */}\n                    {topicAPI &&\n                      topicAPI.map((topic, i) => {\n                        return topic.subject &&\n                          topic.subject._id === formData.subject ? (\n                          <option key={i} value={topic._id}>\n                            {topic.name}\n                          </option>\n                        ) : null;\n                      })}\n                  </select>\n                  <span style={{ color: \"red\" }}>{validate.topic}</span>\n                </div>\n                {}{\" \"}\n              </div>\n              {/* for question type, level and marks */}\n              <div className=\"add-main-row\">\n                {/* for question type and level of difficulty */}\n                <div style={{ flex: \"1\" }} className=\"add-main-row2-col1\">\n                  {/* for Question type */}\n                  <div style={{ flex: \"1\" }} className=\"row2-div\">\n                    <label>Question Type</label>\n                    <br />\n                    <select\n                      className=\"add-select\"\n                      name=\"Qtype\"\n                      value={formData.type}\n                      onChange={onChangeHandler}\n                    >\n                      <option value={\"MULTIPLE CHOICE\"}>Multiple Choice</option>\n                      <option value={\"MULTIPLE RESPONSE\"}>\n                        Multiple Response\n                      </option>\n                      <option value={\"FILL IN BLANKS\"}>\n                        Fill in the blanks\n                      </option>\n                    </select>\n                  </div>\n                  {/* for Difficulty Level */}\n                  <div\n                    style={{ flex: \"1\" }}\n                    className=\"add-main-row2-half row2-div\"\n                  >\n                    <label>Difficulty Level</label>\n                    <br />\n                    <select\n                      className=\"add-select\"\n                      name=\"DiffLevel\"\n                      value={formData.DiffLevel}\n                      onChange={onChangeHandler}\n                    >\n                      <option value={\"easy\"}>Easy</option>\n                      <option value={\"medium\"}>Medium</option>\n                      <option value={\"hard\"}>Hard</option>\n                    </select>\n                  </div>\n                </div>\n                <div style={{ flex: \"1\" }} className=\"add-main-row2-col1 \">\n                  <div style={{ flex: \"1\" }}>\n                    <label>Right Marks</label>\n                    <br />\n                    <input\n                      type={\"text\"}\n                      name=\"rightMarks\"\n                      className=\"add-input\"\n                      value={formData.rightMarks}\n                      onChange={onChangeHandler}\n                    />\n                    <span style={{ color: \"red\" }}>{validate.rightMarks}</span>\n                  </div>\n                  <div style={{ flex: \"1\" }} className=\"add-main-row2-half\">\n                    <label>Wrong Marks</label>\n                    <input\n                      type={\"text\"}\n                      name=\"wrongMarks\"\n                      className=\"add-input\"\n                      value={formData.wrongMarks}\n                      onChange={onChangeHandler}\n                    />\n                    <span style={{ color: \"red\" }}>{validate.wrongMarks}</span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"questionText-div\">\n                <label>Question</label>\n                {richEditorQ == \"Enable\" ? (\n                  <textarea\n                    rows={5}\n                    style={{\n                      width: \"100%\",\n                      borderRadius: \"4px\",\n                      border: \"1px solid lightgrey\",\n                    }}\n                    name=\"questionText\"\n                    value={formData.questionText}\n                    onChange={onChangeHandler}\n                  />\n                ) : (\n                  <ReactQuill\n                    onChange={onChangeHandlerEditor}\n                    value={formData.questionText}\n                  />\n                )}\n                <button\n                  type=\"button\"\n                  className=\"option-btm-btn\"\n                  style={{\n                    marginTop: \"3px\",\n                    marginLeft: \"10px\",\n                    backgroundColor: \"white\",\n                    border: \"none\",\n                  }}\n                  onClick={() => changeRichTextQ()}\n                >\n                  {\" \"}\n                  {richEditorQ} Rich Text Editor\n                </button>\n                <span style={{ color: \"red\" }}>{validate.questionText}</span>\n                {/* <textarea rows={5} style={{ width: '100%', borderRadius: '4px', border: '1px solid lightgrey' }} name='questionText' defaultValue={formData.questionText} onChange={onChangeHandler} /> */}\n              </div>\n              <div>\n                Options\n                {optionArr.map((i, val) => {\n                  return formData.type == \"MULTIPLE RESPONSE\" ? (\n                    <div key={val}>\n                      <div className=\"options-row\">\n                        <div className=\"options-col left\">\n                          <input\n                            type={\"checkbox\"}\n                            name={\"isCorrect\"}\n                            id={`radio-1`}\n                            name=\"isCorrect\"\n                            checked={i.isCorrect}\n                            onChange={(e) => checkBoxOption(val, e.target)}\n                          />{\" \"}\n                          Option {val + 1}\n                        </div>\n                        {i.richTextEditor == false ? (\n                          <textarea\n                            rows={4}\n                            id={`textarea-1`}\n                            className=\"options-col right\"\n                            value={i.option}\n                            style={{ border: \"none\", paddingLeft: \"10px\" }}\n                            name={`option`}\n                            onChange={(e) => changeOptions(val, e.target.value)}\n                          />\n                        ) : (\n                          <ReactQuill\n                            onChange={(e) => onChangeHandlerEditorOp(e, val)}\n                            value={i.option}\n                          />\n                        )}\n                        {/* <textarea rows={4} id={`textarea-1`} className='options-col right' value={i.option}  style={{ border: 'none', paddingLeft: '10px' }} name={`option`} onChange={(e) => changeOptions(val, e.target.value)}/> */}\n                      </div>\n                      <button\n                        type=\"button\"\n                        className=\"option-btm-btn\"\n                        style={{\n                          marginTop: \"3px\",\n                          marginRight: \"10px\",\n                          backgroundColor: \"white\",\n                          border: \"none\",\n                        }}\n                      >\n                        {\" \"}\n                        Remove Option\n                      </button>\n                      |\n                      <button\n                        type=\"button\"\n                        className=\"option-btm-btn\"\n                        style={{\n                          marginTop: \"3px\",\n                          marginLeft: \"10px\",\n                          backgroundColor: \"white\",\n                          border: \"none\",\n                        }}\n                        onClick={() => changeRichText(val)}\n                      >\n                        {i.richTextEditor === false ? \"Enable\" : \"Disable\"} Rich\n                        Text Editor\n                      </button>\n                      <div>\n                        {isSubmit ? (\n                          <span style={{ color: \"red\" }}>\n                            {formErrorsOpt[val].option}\n                          </span>\n                        ) : (\n                          Object.keys(validateOpt).map((obj, i) => {\n                            return i === val ? (\n                              <span style={{ color: \"red\" }}>\n                                {validateOpt[obj].option}\n                              </span>\n                            ) : null;\n                          })\n                        )}\n                      </div>\n                    </div>\n                  ) : (\n                    <div key={val}>\n                      <div className=\"options-row\">\n                        <div className=\"options-col left\">\n                          <input\n                            type={\"radio\"}\n                            name={\"isCorrect\"}\n                            id={`radio-1`}\n                            name=\"isCorrect\"\n                            checked={i.isCorrect}\n                            onChange={(e) => radioBoxOption(val, e.target)}\n                          />{\" \"}\n                          Option {val + 1}\n                        </div>\n                        {/* <textarea rows={4} id={`textarea-1`} className='options-col right' value={i.option} style={{ border: 'none', paddingLeft: '10px' }} name={`option`} onChange={(e) => changeOptions(val, e.target.value)}/> */}\n                        {i.richTextEditor == false ? (\n                          <textarea\n                            rows={4}\n                            id={`textarea-1`}\n                            className=\"options-col right\"\n                            value={i.option}\n                            style={{ border: \"none\", paddingLeft: \"10px\" }}\n                            name={`option`}\n                            onChange={(e) => changeOptions(val, e.target.value)}\n                          />\n                        ) : (\n                          <ReactQuill\n                            onChange={(e) => onChangeHandlerEditorOp(e, val)}\n                            value={i.option}\n                          />\n                        )}\n                      </div>\n                      <button\n                        type=\"button\"\n                        className=\"option-btm-btn\"\n                        style={{\n                          marginTop: \"3px\",\n                          marginRight: \"10px\",\n                          backgroundColor: \"white\",\n                          border: \"none\",\n                        }}\n                        onClick={() => removeOption(val)}\n                      >\n                        {\" \"}\n                        Remove Option\n                      </button>\n                      |\n                      <button\n                        type=\"button\"\n                        className=\"option-btm-btn\"\n                        style={{\n                          marginTop: \"3px\",\n                          marginLeft: \"10px\",\n                          backgroundColor: \"white\",\n                          border: \"none\",\n                        }}\n                        onClick={() => changeRichText(val)}\n                      >\n                        {\" \"}\n                        {i.richTextEditor === false ? \"Enable\" : \"Disable\"} Rich\n                        Text Editor\n                      </button>\n                      <div>\n                        {isSubmit ? (\n                          <span style={{ color: \"red\" }}>\n                            {formErrorsOpt[val].option}\n                          </span>\n                        ) : (\n                          Object.keys(validateOpt).map((obj, i) => {\n                            return i === val ? (\n                              <span style={{ color: \"red\" }}>\n                                {validateOpt[obj].option}\n                              </span>\n                            ) : null;\n                          })\n                        )}\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <button type=\"button\" onClick={newOption}>\n                +Add Option\n              </button>\n            </div>\n            <div className=\"add-footer\">\n              <button\n                className=\"btn btn-primary\"\n                style={{ padding: \"10px 15px 10px 15px\", fontSize: \"20px\" }}\n                type=\"submit\"\n              >\n                Update question\n              </button>\n              <Link to=\"/questions\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-light\"\n                  style={{\n                    marginLeft: \"30px\",\n                    fontSize: \"20px\",\n                    border: \"none\",\n                    outline: \"none\",\n                    padding: \"6px 10px 6px 10px\",\n                  }}\n                >\n                  Cancel\n                </button>\n              </Link>\n            </div>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default EditQuestion;\n","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/Login.js",["145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160"],"import axios from \"axios\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport GoogleLogin from \"react-google-login\";\nimport \"./Style.css\";\nfunction Login() {\n  console.log(window.location.href);\n  const [showPassword, setShowPassword] = useState(false);\n  const [submit, setSubmit] = useState(false);\n  const [validate,setValidate] =  useState({\n    email:'',\n    password:''\n  })\n  const [googleData, setGoogleData] = useState({\n    idToken: \"\",\n    reCaptchaToken: \"\",\n  });\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    reCaptchaToken: \"\",\n  });\n  const reRef = useRef();\n  const navigate = useNavigate();\n\n  const loginSubmit = async (e) => {\n    e.preventDefault();\n   \n    const token = await reRef.current.executeAsync();\n    console.log(token);\n    setFormData({ ...formData, reCaptchaToken: token });\n\n    setValidate(functValidate(formData))\n    setSubmit(true);\n\n\n  };\nconst functValidate=(values)=>{\n  const regex = /^[\\w%\\+\\-]+(\\.[\\w%\\+\\-]+)*@[\\w%\\+\\-]+(\\.[\\w%\\+\\-]+)+$/;\n  const passReg = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n  const errors = {};\n  if (values.email == \"\")\n  {errors.email = \"Username is Required\";}\n  else\n  if(values.email.length<6)\n   { errors.email = \"Username is invalid\";}\n   else if(!regex.test(values.email))\n   {console.log(\"innnnnnn\"); errors.email = \"Username is invalid\";}\n  if (values.password == \"\") {errors.password = \"password is Required\";}\n  else\n  if(values.password.length<6 || !passReg.test(values.password))\n  { errors.password = \"password is invalid\";}\n  return errors;\n}\n  useEffect(() => {\n    if (submit && formData.reCaptchaToken != \"\") {\n      axios\n        .post(\"http://admin.liveexamcenter.in/api/auth/login\", formData, {\n          headers: { Accept: \"application/json\" },\n        })\n        .then((response) => {\n          localStorage.setItem(\n            \"_activeUser\",\n            JSON.stringify(response.data.user)\n          );\n          navigate(\"/questions\");\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  }, [submit]);\nconsole.log(validate)\n  const responseGoogle = async (response) => {\n    console.log(response);\n    const token = await reRef.current.executeAsync();\n    googleData.reCaptchaToken = token;\n    googleData.idToken = response.tokenId;\n    axios\n      .post(\"http://admin.liveexamcenter.in/api/auth/google\", googleData, {\n        headers: { Accept: \"application/json\" },\n      })\n      .then((response) => {\n        // localStorage.setItem(\"_activeUser\", JSON.stringify(response.data.user));\n        localStorage.setItem(\n          \"_activeUser\",\n          JSON.stringify(response.data.googlePayload)\n        );\n        navigate(\"/questions\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"_activeUser\")) navigate(\"/questions\");\n  }, []);\n  return (\n    <div className=\"login\">\n      <form onSubmit={loginSubmit}>\n        <div className=\"container-login\">\n          <h1>Login to your account</h1>\n          <div className=\"login-userName\">\n            <label>\n              <b>Username</b>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Enter Username\"\n              style={{ display: \"block\", width: \"100%\" }}\n              name=\"uname\"\n              onChange={(e) =>\n                setFormData({ ...formData, email: e.target.value })\n              } \n            />\n           <span style={{ color: \"red\" }}>{validate.email}</span>\n          </div>\n          <div className=\"login-userName\">\n            <label>\n              <b>Password</b>\n            </label>\n            <div style={{ position: \"relative\" }}>\n              {showPassword == false ? (\n                <>\n                  <input\n                    type=\"password\"\n                    placeholder=\"Enter Password\"\n                    style={{ display: \"block\", width: \"100%\" }}\n                    name=\"psw\"\n                    onChange={(e) =>\n                      setFormData({ ...formData, password: e.target.value })\n                    }\n                  />\n                  <button\n                    type=\"button\"\n                    className=\"pass-btn\"\n                    onClick={() => setShowPassword(!showPassword)}\n                  >\n                    <i className=\"fa fa-eye\"></i>\n                  </button>\n                </>\n              ) : (\n                <>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter Password\"\n                    style={{ display: \"block\", width: \"100%\" }}\n                    name=\"psw\"\n                    onChange={(e) =>\n                      setFormData({ ...formData, password: e.target.value })\n                    }\n                  />\n                  <button\n                    type=\"button\"\n                    className=\"pass-btn\"\n                    onClick={() => setShowPassword(!showPassword)}\n                  >\n                    <i className=\"fa fa-eye-slash\"></i>\n                  </button>\n                </>\n              )}\n                              <span style={{ color: \"red\" }}>{validate.password}</span>\n            </div>\n            <div>\n              <button\n                type=\"button\"\n                className=\"option-btm-btn\"\n                style={{\n                  backgroundColor: \"white\",\n                  border: \"none\",\n                  marginTop: \"30px\",\n                }}\n              >\n                {\" \"}\n                Forgot Password?\n              </button>\n              <ReCAPTCHA\n                sitekey=\"6Ld3COIZAAAAAC3A_RbO1waRz6QhrhdObYOk7b_5\"\n                size=\"invisible\"\n                ref={reRef}\n              />\n              <button type=\"submit\" className=\"btn btn-primary login-submit\">\n                Login\n              </button>\n            </div>\n            <label\n              style={{\n                textAlign: \"center\",\n                margin: \"15px auto\",\n                display: \"block\",\n              }}\n            >\n              OR\n            </label>\n            <center>\n              <GoogleLogin\n                clientId=\"971623344603-0qquan9pcdb9iu7oq9genvpnel77i7oa.apps.googleusercontent.com\"\n                buttonText=\"Log in With Google\"\n                onSuccess={responseGoogle}\n                onFailure={responseGoogle}\n                cookiePolicy={\"single_host_origin\"}\n              />\n            </center>\n          </div>\n        </div>\n\n        {/* <div class=\"container\" style=\"background-color:#f1f1f1\">\n                    <button type=\"button\" class=\"cancelbtn\">Cancel</button>\n                    <span class=\"psw\">Forgot <a href=\"#\">password?</a></span>\n                </div>   */}\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/LibPagination.js",[],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":3,"column":8,"nodeType":"167","messageId":"168","endLine":3,"endColumn":12},{"ruleId":"165","severity":1,"message":"169","line":5,"column":10,"nodeType":"167","messageId":"168","endLine":5,"endColumn":14},{"ruleId":"165","severity":1,"message":"170","line":7,"column":8,"nodeType":"167","messageId":"168","endLine":7,"endColumn":13},{"ruleId":"165","severity":1,"message":"171","line":16,"column":10,"nodeType":"167","messageId":"168","endLine":16,"endColumn":18},{"ruleId":"165","severity":1,"message":"172","line":16,"column":20,"nodeType":"167","messageId":"168","endLine":16,"endColumn":31},{"ruleId":"165","severity":1,"message":"173","line":77,"column":9,"nodeType":"167","messageId":"168","endLine":77,"endColumn":21},{"ruleId":"174","severity":1,"message":"175","line":123,"column":26,"nodeType":"176","messageId":"177","endLine":123,"endColumn":28},{"ruleId":"178","severity":1,"message":"179","line":143,"column":25,"nodeType":"180","messageId":"181","endLine":143,"endColumn":27},{"ruleId":"182","severity":1,"message":"183","line":150,"column":11,"nodeType":"167","messageId":"184","endLine":150,"endColumn":14},{"ruleId":"182","severity":1,"message":"185","line":151,"column":16,"nodeType":"167","messageId":"184","endLine":151,"endColumn":17},{"ruleId":"178","severity":1,"message":"179","line":152,"column":25,"nodeType":"180","messageId":"181","endLine":152,"endColumn":27},{"ruleId":"178","severity":1,"message":"186","line":159,"column":25,"nodeType":"180","messageId":"181","endLine":159,"endColumn":27},{"ruleId":"187","severity":1,"message":"188","line":239,"column":19,"nodeType":"189","messageId":"190","endLine":239,"endColumn":45},{"ruleId":"191","severity":1,"message":"192","line":23,"column":6,"nodeType":"193","endLine":23,"endColumn":8,"suggestions":"194"},{"ruleId":"165","severity":1,"message":"169","line":5,"column":10,"nodeType":"167","messageId":"168","endLine":5,"endColumn":14},{"ruleId":"165","severity":1,"message":"171","line":11,"column":10,"nodeType":"167","messageId":"168","endLine":11,"endColumn":18},{"ruleId":"165","severity":1,"message":"172","line":11,"column":20,"nodeType":"167","messageId":"168","endLine":11,"endColumn":31},{"ruleId":"165","severity":1,"message":"173","line":92,"column":9,"nodeType":"167","messageId":"168","endLine":92,"endColumn":21},{"ruleId":"174","severity":1,"message":"175","line":137,"column":26,"nodeType":"176","messageId":"177","endLine":137,"endColumn":28},{"ruleId":"178","severity":1,"message":"179","line":157,"column":25,"nodeType":"180","messageId":"181","endLine":157,"endColumn":27},{"ruleId":"182","severity":1,"message":"183","line":164,"column":11,"nodeType":"167","messageId":"184","endLine":164,"endColumn":14},{"ruleId":"182","severity":1,"message":"185","line":165,"column":16,"nodeType":"167","messageId":"184","endLine":165,"endColumn":17},{"ruleId":"178","severity":1,"message":"179","line":166,"column":25,"nodeType":"180","messageId":"181","endLine":166,"endColumn":27},{"ruleId":"178","severity":1,"message":"186","line":173,"column":25,"nodeType":"180","messageId":"181","endLine":173,"endColumn":27},{"ruleId":"187","severity":1,"message":"188","line":252,"column":19,"nodeType":"189","messageId":"190","endLine":252,"endColumn":45},{"ruleId":"187","severity":1,"message":"188","line":330,"column":17,"nodeType":"189","messageId":"190","endLine":335,"endColumn":19},{"ruleId":"165","severity":1,"message":"195","line":6,"column":10,"nodeType":"167","messageId":"168","endLine":6,"endColumn":17},{"ruleId":"174","severity":1,"message":"175","line":133,"column":26,"nodeType":"176","messageId":"177","endLine":133,"endColumn":28},{"ruleId":"178","severity":1,"message":"179","line":153,"column":25,"nodeType":"180","messageId":"181","endLine":153,"endColumn":27},{"ruleId":"182","severity":1,"message":"183","line":160,"column":11,"nodeType":"167","messageId":"184","endLine":160,"endColumn":14},{"ruleId":"182","severity":1,"message":"185","line":161,"column":16,"nodeType":"167","messageId":"184","endLine":161,"endColumn":17},{"ruleId":"178","severity":1,"message":"179","line":162,"column":25,"nodeType":"180","messageId":"181","endLine":162,"endColumn":27},{"ruleId":"178","severity":1,"message":"186","line":169,"column":25,"nodeType":"180","messageId":"181","endLine":169,"endColumn":27},{"ruleId":"165","severity":1,"message":"196","line":14,"column":25,"nodeType":"167","messageId":"168","endLine":14,"endColumn":41},{"ruleId":"191","severity":1,"message":"197","line":88,"column":6,"nodeType":"193","endLine":88,"endColumn":22,"suggestions":"198"},{"ruleId":"191","severity":1,"message":"199","line":93,"column":6,"nodeType":"193","endLine":93,"endColumn":17,"suggestions":"200"},{"ruleId":"178","severity":1,"message":"179","line":100,"column":22,"nodeType":"180","messageId":"181","endLine":100,"endColumn":24},{"ruleId":"178","severity":1,"message":"179","line":100,"column":55,"nodeType":"180","messageId":"181","endLine":100,"endColumn":57},{"ruleId":"178","severity":1,"message":"186","line":101,"column":22,"nodeType":"180","messageId":"181","endLine":101,"endColumn":24},{"ruleId":"178","severity":1,"message":"179","line":109,"column":24,"nodeType":"180","messageId":"181","endLine":109,"endColumn":26},{"ruleId":"178","severity":1,"message":"179","line":127,"column":11,"nodeType":"180","messageId":"181","endLine":127,"endColumn":13},{"ruleId":"178","severity":1,"message":"179","line":131,"column":15,"nodeType":"180","messageId":"181","endLine":131,"endColumn":17},{"ruleId":"178","severity":1,"message":"179","line":156,"column":24,"nodeType":"180","messageId":"181","endLine":156,"endColumn":26},{"ruleId":"178","severity":1,"message":"179","line":157,"column":22,"nodeType":"180","messageId":"181","endLine":157,"endColumn":24},{"ruleId":"178","severity":1,"message":"179","line":162,"column":29,"nodeType":"180","messageId":"181","endLine":162,"endColumn":31},{"ruleId":"174","severity":1,"message":"175","line":164,"column":33,"nodeType":"176","messageId":"177","endLine":164,"endColumn":35},{"ruleId":"174","severity":1,"message":"175","line":180,"column":33,"nodeType":"176","messageId":"177","endLine":180,"endColumn":35},{"ruleId":"178","severity":1,"message":"179","line":181,"column":25,"nodeType":"180","messageId":"181","endLine":181,"endColumn":27},{"ruleId":"178","severity":1,"message":"179","line":212,"column":15,"nodeType":"180","messageId":"181","endLine":212,"endColumn":17},{"ruleId":"178","severity":1,"message":"179","line":215,"column":15,"nodeType":"180","messageId":"181","endLine":215,"endColumn":17},{"ruleId":"178","severity":1,"message":"179","line":220,"column":15,"nodeType":"180","messageId":"181","endLine":220,"endColumn":17},{"ruleId":"178","severity":1,"message":"179","line":251,"column":17,"nodeType":"180","messageId":"181","endLine":251,"endColumn":19},{"ruleId":"178","severity":1,"message":"179","line":263,"column":50,"nodeType":"180","messageId":"181","endLine":263,"endColumn":52},{"ruleId":"178","severity":1,"message":"179","line":272,"column":11,"nodeType":"180","messageId":"181","endLine":272,"endColumn":13},{"ruleId":"178","severity":1,"message":"179","line":283,"column":11,"nodeType":"180","messageId":"181","endLine":283,"endColumn":13},{"ruleId":"178","severity":1,"message":"179","line":420,"column":28,"nodeType":"180","messageId":"181","endLine":420,"endColumn":30},{"ruleId":"178","severity":1,"message":"179","line":460,"column":37,"nodeType":"180","messageId":"181","endLine":460,"endColumn":39},{"ruleId":"187","severity":1,"message":"188","line":468,"column":31,"nodeType":"189","messageId":"190","endLine":468,"endColumn":47},{"ruleId":"178","severity":1,"message":"179","line":474,"column":45,"nodeType":"180","messageId":"181","endLine":474,"endColumn":47},{"ruleId":"187","severity":1,"message":"188","line":548,"column":31,"nodeType":"189","messageId":"190","endLine":548,"endColumn":47},{"ruleId":"178","severity":1,"message":"179","line":554,"column":45,"nodeType":"180","messageId":"181","endLine":554,"endColumn":47},{"ruleId":"165","severity":1,"message":"201","line":12,"column":10,"nodeType":"167","messageId":"168","endLine":12,"endColumn":16},{"ruleId":"165","severity":1,"message":"202","line":12,"column":18,"nodeType":"167","messageId":"168","endLine":12,"endColumn":27},{"ruleId":"165","severity":1,"message":"203","line":16,"column":10,"nodeType":"167","messageId":"168","endLine":16,"endColumn":26},{"ruleId":"165","severity":1,"message":"204","line":16,"column":28,"nodeType":"167","messageId":"168","endLine":16,"endColumn":47},{"ruleId":"165","severity":1,"message":"205","line":22,"column":10,"nodeType":"167","messageId":"168","endLine":22,"endColumn":23},{"ruleId":"165","severity":1,"message":"196","line":22,"column":25,"nodeType":"167","messageId":"168","endLine":22,"endColumn":41},{"ruleId":"165","severity":1,"message":"206","line":23,"column":25,"nodeType":"167","messageId":"168","endLine":23,"endColumn":41},{"ruleId":"165","severity":1,"message":"207","line":24,"column":20,"nodeType":"167","messageId":"168","endLine":24,"endColumn":31},{"ruleId":"191","severity":1,"message":"199","line":62,"column":6,"nodeType":"193","endLine":62,"endColumn":11,"suggestions":"208"},{"ruleId":"191","severity":1,"message":"199","line":103,"column":6,"nodeType":"193","endLine":103,"endColumn":17,"suggestions":"209"},{"ruleId":"178","severity":1,"message":"179","line":109,"column":22,"nodeType":"180","messageId":"181","endLine":109,"endColumn":24},{"ruleId":"178","severity":1,"message":"179","line":109,"column":55,"nodeType":"180","messageId":"181","endLine":109,"endColumn":57},{"ruleId":"178","severity":1,"message":"186","line":110,"column":22,"nodeType":"180","messageId":"181","endLine":110,"endColumn":24},{"ruleId":"178","severity":1,"message":"179","line":118,"column":24,"nodeType":"180","messageId":"181","endLine":118,"endColumn":26},{"ruleId":"178","severity":1,"message":"179","line":136,"column":11,"nodeType":"180","messageId":"181","endLine":136,"endColumn":13},{"ruleId":"178","severity":1,"message":"179","line":140,"column":15,"nodeType":"180","messageId":"181","endLine":140,"endColumn":17},{"ruleId":"178","severity":1,"message":"179","line":168,"column":15,"nodeType":"180","messageId":"181","endLine":168,"endColumn":17},{"ruleId":"178","severity":1,"message":"179","line":171,"column":15,"nodeType":"180","messageId":"181","endLine":171,"endColumn":17},{"ruleId":"178","severity":1,"message":"179","line":176,"column":15,"nodeType":"180","messageId":"181","endLine":176,"endColumn":17},{"ruleId":"178","severity":1,"message":"179","line":183,"column":15,"nodeType":"180","messageId":"181","endLine":183,"endColumn":17},{"ruleId":"178","severity":1,"message":"179","line":186,"column":15,"nodeType":"180","messageId":"181","endLine":186,"endColumn":17},{"ruleId":"178","severity":1,"message":"179","line":193,"column":15,"nodeType":"180","messageId":"181","endLine":193,"endColumn":17},{"ruleId":"178","severity":1,"message":"179","line":206,"column":17,"nodeType":"180","messageId":"181","endLine":206,"endColumn":19},{"ruleId":"178","severity":1,"message":"179","line":218,"column":50,"nodeType":"180","messageId":"181","endLine":218,"endColumn":52},{"ruleId":"191","severity":1,"message":"210","line":242,"column":6,"nodeType":"193","endLine":242,"endColumn":17,"suggestions":"211"},{"ruleId":"178","severity":1,"message":"179","line":374,"column":30,"nodeType":"180","messageId":"181","endLine":374,"endColumn":32},{"ruleId":"178","severity":1,"message":"179","line":412,"column":40,"nodeType":"180","messageId":"181","endLine":412,"endColumn":42},{"ruleId":"187","severity":1,"message":"188","line":420,"column":29,"nodeType":"189","messageId":"190","endLine":420,"endColumn":45},{"ruleId":"178","severity":1,"message":"179","line":426,"column":43,"nodeType":"180","messageId":"181","endLine":426,"endColumn":45},{"ruleId":"187","severity":1,"message":"188","line":496,"column":29,"nodeType":"189","messageId":"190","endLine":496,"endColumn":45},{"ruleId":"178","severity":1,"message":"179","line":503,"column":43,"nodeType":"180","messageId":"181","endLine":503,"endColumn":45},{"ruleId":"165","severity":1,"message":"169","line":3,"column":10,"nodeType":"167","messageId":"168","endLine":3,"endColumn":14},{"ruleId":"165","severity":1,"message":"212","line":15,"column":22,"nodeType":"167","messageId":"168","endLine":15,"endColumn":35},{"ruleId":"213","severity":1,"message":"214","line":40,"column":23,"nodeType":"215","messageId":"216","endLine":40,"endColumn":24,"suggestions":"217"},{"ruleId":"213","severity":1,"message":"218","line":40,"column":25,"nodeType":"215","messageId":"216","endLine":40,"endColumn":26,"suggestions":"219"},{"ruleId":"213","severity":1,"message":"214","line":40,"column":36,"nodeType":"215","messageId":"216","endLine":40,"endColumn":37,"suggestions":"220"},{"ruleId":"213","severity":1,"message":"218","line":40,"column":38,"nodeType":"215","messageId":"216","endLine":40,"endColumn":39,"suggestions":"221"},{"ruleId":"213","severity":1,"message":"214","line":40,"column":49,"nodeType":"215","messageId":"216","endLine":40,"endColumn":50,"suggestions":"222"},{"ruleId":"213","severity":1,"message":"218","line":40,"column":51,"nodeType":"215","messageId":"216","endLine":40,"endColumn":52,"suggestions":"223"},{"ruleId":"213","severity":1,"message":"214","line":40,"column":62,"nodeType":"215","messageId":"216","endLine":40,"endColumn":63,"suggestions":"224"},{"ruleId":"213","severity":1,"message":"218","line":40,"column":64,"nodeType":"215","messageId":"216","endLine":40,"endColumn":65,"suggestions":"225"},{"ruleId":"178","severity":1,"message":"179","line":43,"column":20,"nodeType":"180","messageId":"181","endLine":43,"endColumn":22},{"ruleId":"178","severity":1,"message":"179","line":50,"column":23,"nodeType":"180","messageId":"181","endLine":50,"endColumn":25},{"ruleId":"178","severity":1,"message":"186","line":57,"column":43,"nodeType":"180","messageId":"181","endLine":57,"endColumn":45},{"ruleId":"191","severity":1,"message":"226","line":73,"column":6,"nodeType":"193","endLine":73,"endColumn":14,"suggestions":"227"},{"ruleId":"191","severity":1,"message":"192","line":99,"column":6,"nodeType":"193","endLine":99,"endColumn":8,"suggestions":"228"},{"ruleId":"178","severity":1,"message":"179","line":125,"column":29,"nodeType":"180","messageId":"181","endLine":125,"endColumn":31},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"no-unused-vars","'Main' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Modal' is defined but never used.","'topicAPI' is assigned a value but never used.","'setTopicAPI' is assigned a value but never used.","'topicHandler' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'ele' is already defined.","redeclared","'i' is already defined.","Expected '!==' and instead saw '!='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["231"],"'confirm' is defined but never used.","'setValidateSameQ' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'tempOptionArr'. Either include it or remove the dependency array.",["232"],"React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["233"],"'queAPI' is assigned a value but never used.","'setQueAPI' is assigned a value but never used.","'richTextEditFlag' is assigned a value but never used.","'setRichTextEditFlag' is assigned a value but never used.","'validateSameQ' is assigned a value but never used.","'setFormErrorsOpt' is assigned a value but never used.","'setIsSubmit' is assigned a value but never used.",["234"],["235"],"React Hook useEffect has a missing dependency: 'optionArr'. Either include it or remove the dependency array.",["236"],"'setGoogleData' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["237","238"],"Unnecessary escape character: \\-.",["239","240"],["241","242"],["243","244"],["245","246"],["247","248"],["249","250"],["251","252"],"React Hook useEffect has missing dependencies: 'formData' and 'navigate'. Either include them or remove the dependency array.",["253"],["254"],"no-global-assign","no-unsafe-negation",{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"259","fix":"263"},{"desc":"264","fix":"265"},{"messageId":"266","fix":"267","desc":"268"},{"messageId":"269","fix":"270","desc":"271"},{"messageId":"266","fix":"272","desc":"268"},{"messageId":"269","fix":"273","desc":"271"},{"messageId":"266","fix":"274","desc":"268"},{"messageId":"269","fix":"275","desc":"271"},{"messageId":"266","fix":"276","desc":"268"},{"messageId":"269","fix":"277","desc":"271"},{"messageId":"266","fix":"278","desc":"268"},{"messageId":"269","fix":"279","desc":"271"},{"messageId":"266","fix":"280","desc":"268"},{"messageId":"269","fix":"281","desc":"271"},{"messageId":"266","fix":"282","desc":"268"},{"messageId":"269","fix":"283","desc":"271"},{"messageId":"266","fix":"284","desc":"268"},{"messageId":"269","fix":"285","desc":"271"},{"desc":"286","fix":"287"},{"desc":"255","fix":"288"},"Update the dependencies array to be: [navigate]",{"range":"289","text":"290"},"Update the dependencies array to be: [formData.Qtype, tempOptionArr]",{"range":"291","text":"292"},"Update the dependencies array to be: [formData, optionArr]",{"range":"293","text":"294"},"Update the dependencies array to be: [Qid, formData]",{"range":"295","text":"296"},{"range":"297","text":"294"},"Update the dependencies array to be: [isloading, optionArr]",{"range":"298","text":"299"},"removeEscape",{"range":"300","text":"301"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"302","text":"303"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"304","text":"301"},{"range":"305","text":"303"},{"range":"306","text":"301"},{"range":"307","text":"303"},{"range":"308","text":"301"},{"range":"309","text":"303"},{"range":"310","text":"301"},{"range":"311","text":"303"},{"range":"312","text":"301"},{"range":"313","text":"303"},{"range":"314","text":"301"},{"range":"315","text":"303"},{"range":"316","text":"301"},{"range":"317","text":"303"},"Update the dependencies array to be: [formData, navigate, submit]",{"range":"318","text":"319"},{"range":"320","text":"290"},[859,861],"[navigate]",[2558,2574],"[formData.Qtype, tempOptionArr]",[2699,2710],"[formData, optionArr]",[2234,2239],"[Qid, formData]",[3241,3252],[7063,7074],"[isloading, optionArr]",[1088,1089],"",[1088,1088],"\\",[1090,1091],[1090,1090],[1101,1102],[1101,1101],[1103,1104],[1103,1103],[1114,1115],[1114,1114],[1116,1117],[1116,1116],[1127,1128],[1127,1127],[1129,1130],[1129,1129],[2194,2202],"[formData, navigate, submit]",[3018,3020]]