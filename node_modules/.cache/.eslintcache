[{"/home/am-pc-05-other/React/live-exam-center/src/index.js":"1","/home/am-pc-05-other/React/live-exam-center/src/reportWebVitals.js":"2","/home/am-pc-05-other/React/live-exam-center/src/App.js":"3","/home/am-pc-05-other/React/live-exam-center/src/components/Main.js":"4","/home/am-pc-05-other/React/live-exam-center/src/components/Questions.js":"5","/home/am-pc-05-other/React/live-exam-center/src/components/Topics.js":"6","/home/am-pc-05-other/React/live-exam-center/src/components/Subjects.js":"7","/home/am-pc-05-other/React/live-exam-center/src/components/AddQuestions.js":"8","/home/am-pc-05-other/React/live-exam-center/src/components/LibPagination.js":"9","/home/am-pc-05-other/React/live-exam-center/src/components/EditQuestion.js":"10"},{"size":517,"mtime":1642136102000,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1642136102000,"results":"13","hashOfConfig":"12"},{"size":1020,"mtime":1643281225640,"results":"14","hashOfConfig":"12"},{"size":1149,"mtime":1642162194000,"results":"15","hashOfConfig":"12"},{"size":8373,"mtime":1643282535756,"results":"16","hashOfConfig":"12"},{"size":160,"mtime":1642136102000,"results":"17","hashOfConfig":"12"},{"size":166,"mtime":1642136102000,"results":"18","hashOfConfig":"12"},{"size":13307,"mtime":1643277582252,"results":"19","hashOfConfig":"12"},{"size":1438,"mtime":1642166216000,"results":"20","hashOfConfig":"12"},{"size":14054,"mtime":1643286756132,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ac4f46",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/am-pc-05-other/React/live-exam-center/src/index.js",[],["44","45"],"/home/am-pc-05-other/React/live-exam-center/src/reportWebVitals.js",[],"/home/am-pc-05-other/React/live-exam-center/src/App.js",[],"/home/am-pc-05-other/React/live-exam-center/src/components/Main.js",[],"/home/am-pc-05-other/React/live-exam-center/src/components/Questions.js",[],"/home/am-pc-05-other/React/live-exam-center/src/components/Topics.js",[],"/home/am-pc-05-other/React/live-exam-center/src/components/Subjects.js",[],"/home/am-pc-05-other/React/live-exam-center/src/components/AddQuestions.js",["46","47","48","49","50","51","52","53","54","55","56","57","58","59","60"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport {Link} from 'react-router-dom'\nfunction AddQuestions() {\n\n    const [subAPI, setSubAPI] = useState([]);\n    const [topicAPI, setTopicAPI] = useState([]);\n    const tempOptionArr =[{\n        isCorrect: false,\n        option: ''\n    },\n    {\n        isCorrect: false,\n        option: ''\n    },\n    {\n        isCorrect: false,\n        option: ''\n    },\n    {\n        isCorrect: false,\n        option: ''\n    }\n]\n    const [optionArr, setOptionArr] = useState(tempOptionArr);\n    const tempformData = \n        {\n            subject: \"\",\n            topic: \"\",\n            Qtype: \"MULTIPLE CHOICE\",\n            questionText:'',\n            DiffLevel: \"easy\",\n            rightMarks: 1,\n            wrongMarks: 0,\n            options: null\n           \n        }\n    \n    const [formData, setFormData] = useState(tempformData)\n    //Read API For subject\n    useEffect(() => {\n        axios.get(`http://admin.liveexamcenter.in/api/subjects?term=`, { headers: { authorization: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWRkMjgwYWU2ZDdkNzdjOGU0ZjY4ZjYiLCJfYWN0aXZlT3JnIjoiNjE5Y2U0YThlNTg2ODUxNDYxMGM4ZGE3IiwiaWF0IjoxNjQzMjYyOTc2LCJleHAiOjE2NDMzMDYxNzZ9.y3UQVJC2yNAyVzGzuqHrY5zTiLp97g9khP6xVJF5nE4\" } })\n            .then(response => {\n                console.log(response.data.result)\n                setSubAPI(response.data.result);\n            })\n            .catch(error => {\n                console.log(error);\n            })\n    }, []);\n\n    //Read API for Topics\n    useEffect(() => {\n\n        axios.get(`http://admin.liveexamcenter.in/api/topics?page=1&limit=5&term=`, { headers: { authorization: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWRkMjgwYWU2ZDdkNzdjOGU0ZjY4ZjYiLCJfYWN0aXZlT3JnIjoiNjE5Y2U0YThlNTg2ODUxNDYxMGM4ZGE3IiwiaWF0IjoxNjQzMjYyOTc2LCJleHAiOjE2NDMzMDYxNzZ9.y3UQVJC2yNAyVzGzuqHrY5zTiLp97g9khP6xVJF5nE4\" } })\n            .then((res) => {\n                console.log(res.data.result)\n                setTopicAPI(res.data.result)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n\n\n    }, [])\n\n    useEffect(()=>{\n        //to deselect the option when question type changes\n         setOptionArr(tempOptionArr);\n        \n    },[formData.Qtype])\n    \n    useEffect(()=>{\n        //to add the option array to formdata\n        setFormData({...formData, options:optionArr})\n    },[optionArr])\n\n    const onChangeHandler = (e) => {\n        const ename = e.target.name;\n        if(e.target.name=='rightMarks' || e.target.name=='wrongMarks')\n        {\n            setFormData({ ...formData, [ename]: parseInt(e.target.value) })\n        } \n        else\n        setFormData({ ...formData, [ename]: e.target.value })\n    }\n\n\n    function removeOption(index) {\n       // \n        const tempArr= [...optionArr];\n        tempArr.splice(index,1)\n        setOptionArr(tempArr)\n       \n        \n    }\n    //console.log(optionArr)\n\n    const changeOptions = (i,input) =>{\n        setOptionArr(prev=> prev.map((option,ind)=>\n            i==ind ? {...option, option: input} : option\n        ))\n       \n    }\n\n    const SubmitForm =(e)=>{\n        e.preventDefault();\n        axios.post('http://admin.liveexamcenter.in/api/questions',formData,{ headers: { authorization: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWRkMjgwYWU2ZDdkNzdjOGU0ZjY4ZjYiLCJfYWN0aXZlT3JnIjoiNjE5Y2U0YThlNTg2ODUxNDYxMGM4ZGE3IiwiaWF0IjoxNjQzMjYyOTc2LCJleHAiOjE2NDMzMDYxNzZ9.y3UQVJC2yNAyVzGzuqHrY5zTiLp97g9khP6xVJF5nE4\" }})\n        .then((res) => {\n            console.log(res.data)\n           // setTopicAPI(res.data.result)\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n        console.log(optionArr)\n        console.log(formData)\n        setFormData(tempformData)\n    }\n\n    const checkBoxOption =(i,e)=>{\n        //To check option is checked or not and accordingly set value of iscorrect\n       e.checked== true ? setOptionArr(prev=> prev.map((isCorrect,ind)=>\n              i==ind ? {...isCorrect, isCorrect: true} : isCorrect\n          )) : setOptionArr(prev=> prev.map((isCorrect,ind)=>\n          i==ind ? {...isCorrect, isCorrect: false} : isCorrect\n      ))\n\n    }\n\n    const radioBoxOption =(i,e)=>{\n        //To check option is checked or not and accordingly set value of iscorrect\n       e.checked== true ? setOptionArr(prev=> prev.map((isCorrect,ind)=>\n              i==ind ? {...isCorrect, isCorrect: true} : {...isCorrect, isCorrect: false}\n          )) : setOptionArr(prev=> prev.map((isCorrect,ind)=>\n          i==ind ? {...isCorrect, isCorrect: false} : isCorrect\n      ))\n\n    }\n\n    const newOption = () =>{\n       const temp = [...optionArr , { isCorrect: false, option: ''}]\n       setOptionArr(temp)\n     \n    }\n\n    return (\n        <div>\n            <div className='add-div'>\n                <div className='add-header'>\n                    <h3>Add question</h3>\n                </div>\n                <form onSubmit={SubmitForm} id='myForm'>\n                    {/* middle part of add question page */}\n                    <div className='add-main'>\n                        {/* for select subject and topic */}\n                        <div className='add-main-row'>\n                            {/* for subject */}\n                            <div style={{ flex: '1' }} className='add-main-row1-col1' >\n                                <label>Select Subject</label><br />\n                                <select className='add-select' name='subject' onChange={onChangeHandler} required>\n                                    <option value=''>Search Subject...</option>\n                                    {subAPI && subAPI.map((subject, i) => {\n                                        return <option key={i} value={subject._id}>{subject.name}</option>\n                                    })}\n                                </select>\n                            </div>\n                            {/* for topic */}\n                            <div style={{ flex: '1' }} className='add-main-row1-col1'>\n                                <label>Select Topic</label><br />\n                                <select className='add-select' name='topic' onChange={onChangeHandler}>\n                                    <option value='' >Search Topic...</option>\n                                    {topicAPI && topicAPI.map((topic, i) => {\n                                        return topic.subject._id == formData.subject ?\n                                            <option key={i} value={topic._id}>{topic.name}</option> : null\n                                    })}\n                                </select>\n                            </div>\n                            {\n                            }       </div>\n                        {/* for question type, level and marks */}\n                        <div className='add-main-row'>\n                            {/* for question type and level of difficulty */}\n                            <div style={{ flex: '1' }} className='add-main-row2-col1' >\n                                {/* for Question type */}\n                                <div style={{ flex: '1' }} className='row2-div'>\n                                    <label>Question Type</label><br />\n                                    <select className='add-select' name='Qtype' defaultValue={formData.Qtype} onChange={onChangeHandler}>\n                                        <option value={'MULTIPLE CHOICE'} >Multiple Choice</option>\n                                        <option value={'MULTIPLE RESPONSE'}>Multiple Response</option>\n                                        <option value={'FILL IN BLANKS'}>Fill in the blanks</option>\n                                    </select>\n                                </div>\n                                {/* for Difficulty Level */}\n                                <div style={{ flex: '1' }} className='add-main-row2-half row2-div'>\n                                    <label>Difficulty Level</label><br />\n                                    <select className='add-select' name='DiffLevel' defaultValue={formData.DiffLevel} onChange={onChangeHandler}>\n                                        <option value={'easy'} >Easy</option>\n                                        <option value={'medium'}>Medium</option>\n                                        <option value={'hard'}>Hard</option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div style={{ flex: '1' }} className='add-main-row2-col1 '>\n                                <div style={{ flex: '1' }} >\n                                    <label>Right Marks</label><br />\n                                    <input type={'text'} name='rightMarks' className='add-input' value={formData.rightMarks} onChange={onChangeHandler} />\n                                </div>\n                                <div style={{ flex: '1' }} className='add-main-row2-half'>\n                                    <label>Wrong Marks</label>\n                                    <input type={'text'} name='wrongMarks' className='add-input' value={formData.wrongMarks} onChange={onChangeHandler} />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='questionText-div'>\n                            <label>Question</label>\n                            <textarea rows={5} style={{ width: '100%', borderRadius: '4px', border: '1px solid lightgrey' }} name='questionText' value={formData.questionText} onChange={onChangeHandler} />\n                        </div>\n                        <div>\n\n                            Options\n                            {optionArr.map((i, val) => {\n                                return (\n                                    formData.Qtype == 'MULTIPLE RESPONSE' ?\n                                        <div>\n                                            <div className='options-row' >\n                                                <div className='options-col left'>\n                                                    <input type={'checkbox'} name={'isCorrect'} id={`radio-1`}   name='isCorrect' checked={i.isCorrect} onChange={(e)=>checkBoxOption(val,e.target)} /> Option {val+1}\n                                                </div>\n                                                <textarea rows={4} id={`textarea-1`} className='options-col right' value={i.option} style={{ border: 'none', paddingLeft: '10px' }} name={`option`} onChange={(e)=>changeOptions(val,e.target.value)} />\n                                            </div>\n                                            <button type='button' className='option-btm-btn' style={{ marginTop: '3px', marginRight: '10px', backgroundColor: 'white', border: 'none' }}> Remove Option</button>|\n                                            <button type='button' className='option-btm-btn' style={{ marginTop: '3px', marginLeft: '10px', backgroundColor: 'white', border: 'none' }} >  Enable Rich Text Editor</button>\n                                        </div> :\n                                        <div>\n                                            <div className='options-row' >\n                                                <div className='options-col left'>\n                                                    <input type={'radio'} name={'isCorrect'} id={`radio-1`}  name='isCorrect' checked={i.isCorrect} onChange={(e)=>radioBoxOption(val,e.target)}/> Option {val+1}\n                                                </div>\n                                                <textarea rows={4} id={`textarea-1`} className='options-col right' value={i.option} style={{ border: 'none', paddingLeft: '10px' }} name={`option`} onChange={(e)=>changeOptions(val,e.target.value)} />\n \n                                            </div>\n                                            <button type='button' className='option-btm-btn' style={{ marginTop: '3px', marginRight: '10px', backgroundColor: 'white', border: 'none' }} onClick={() => removeOption(val)}> Remove Option</button>|\n                                            <button type='button' className='option-btm-btn' style={{ marginTop: '3px', marginLeft: '10px', backgroundColor: 'white', border: 'none' }} >  Enable Rich Text Editor</button>\n                                        </div>\n                                )\n                            })}\n\n                        </div>\n                        <button type='button' onClick={newOption}>+Add Option</button>\n                    </div>\n                    <div className='add-footer'>\n                        <button className='btn btn-primary' style={{ padding: '10px 15px 10px 15px', fontSize: '20px' }} type='submit'>Save question</button>\n                        <Link to='/questions'>\n                        <button type='button' className='btn btn-light' style={{ marginLeft: '30px', fontSize: '20px', border: 'none', outline: 'none', padding: '6px 10px 6px 10px' }}>Cancel</button>\n                        </Link>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default AddQuestions\n","/home/am-pc-05-other/React/live-exam-center/src/components/LibPagination.js",[],"/home/am-pc-05-other/React/live-exam-center/src/components/EditQuestion.js",["61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":71,"column":7,"nodeType":"85","endLine":71,"endColumn":23,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":76,"column":7,"nodeType":"85","endLine":76,"endColumn":18,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":80,"column":25,"nodeType":"91","messageId":"92","endLine":80,"endColumn":27},{"ruleId":"89","severity":1,"message":"90","line":80,"column":56,"nodeType":"91","messageId":"92","endLine":80,"endColumn":58},{"ruleId":"89","severity":1,"message":"90","line":101,"column":14,"nodeType":"91","messageId":"92","endLine":101,"endColumn":16},{"ruleId":"89","severity":1,"message":"90","line":123,"column":17,"nodeType":"91","messageId":"92","endLine":123,"endColumn":19},{"ruleId":"89","severity":1,"message":"90","line":124,"column":16,"nodeType":"91","messageId":"92","endLine":124,"endColumn":18},{"ruleId":"89","severity":1,"message":"90","line":126,"column":12,"nodeType":"91","messageId":"92","endLine":126,"endColumn":14},{"ruleId":"89","severity":1,"message":"90","line":133,"column":17,"nodeType":"91","messageId":"92","endLine":133,"endColumn":19},{"ruleId":"89","severity":1,"message":"90","line":134,"column":16,"nodeType":"91","messageId":"92","endLine":134,"endColumn":18},{"ruleId":"89","severity":1,"message":"90","line":136,"column":12,"nodeType":"91","messageId":"92","endLine":136,"endColumn":14},{"ruleId":"89","severity":1,"message":"90","line":174,"column":66,"nodeType":"91","messageId":"92","endLine":174,"endColumn":68},{"ruleId":"89","severity":1,"message":"90","line":224,"column":52,"nodeType":"91","messageId":"92","endLine":224,"endColumn":54},{"ruleId":"93","severity":1,"message":"94","line":228,"column":114,"nodeType":"95","messageId":"96","endLine":228,"endColumn":130},{"ruleId":"93","severity":1,"message":"94","line":238,"column":110,"nodeType":"95","messageId":"96","endLine":238,"endColumn":126},{"ruleId":"97","severity":1,"message":"98","line":8,"column":12,"nodeType":"99","messageId":"100","endLine":8,"endColumn":18},{"ruleId":"97","severity":1,"message":"101","line":8,"column":20,"nodeType":"99","messageId":"100","endLine":8,"endColumn":29},{"ruleId":"83","severity":1,"message":"102","line":53,"column":8,"nodeType":"85","endLine":53,"endColumn":10,"suggestions":"103"},{"ruleId":"83","severity":1,"message":"84","line":85,"column":7,"nodeType":"85","endLine":85,"endColumn":23,"suggestions":"104"},{"ruleId":"83","severity":1,"message":"87","line":90,"column":7,"nodeType":"85","endLine":90,"endColumn":18,"suggestions":"105"},{"ruleId":"89","severity":1,"message":"90","line":94,"column":25,"nodeType":"91","messageId":"92","endLine":94,"endColumn":27},{"ruleId":"89","severity":1,"message":"90","line":94,"column":56,"nodeType":"91","messageId":"92","endLine":94,"endColumn":58},{"ruleId":"89","severity":1,"message":"90","line":115,"column":14,"nodeType":"91","messageId":"92","endLine":115,"endColumn":16},{"ruleId":"89","severity":1,"message":"90","line":137,"column":17,"nodeType":"91","messageId":"92","endLine":137,"endColumn":19},{"ruleId":"89","severity":1,"message":"90","line":138,"column":16,"nodeType":"91","messageId":"92","endLine":138,"endColumn":18},{"ruleId":"89","severity":1,"message":"90","line":140,"column":12,"nodeType":"91","messageId":"92","endLine":140,"endColumn":14},{"ruleId":"89","severity":1,"message":"90","line":147,"column":17,"nodeType":"91","messageId":"92","endLine":147,"endColumn":19},{"ruleId":"89","severity":1,"message":"90","line":148,"column":16,"nodeType":"91","messageId":"92","endLine":148,"endColumn":18},{"ruleId":"89","severity":1,"message":"90","line":150,"column":12,"nodeType":"91","messageId":"92","endLine":150,"endColumn":14},{"ruleId":"89","severity":1,"message":"90","line":188,"column":66,"nodeType":"91","messageId":"92","endLine":188,"endColumn":68},{"ruleId":"89","severity":1,"message":"90","line":238,"column":52,"nodeType":"91","messageId":"92","endLine":238,"endColumn":54},{"ruleId":"93","severity":1,"message":"94","line":242,"column":114,"nodeType":"95","messageId":"96","endLine":242,"endColumn":130},{"ruleId":"93","severity":1,"message":"94","line":252,"column":110,"nodeType":"95","messageId":"96","endLine":252,"endColumn":126},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tempOptionArr'. Either include it or remove the dependency array.","ArrayExpression",["108"],"React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["109"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-unused-vars","'queAPI' is assigned a value but never used.","Identifier","unusedVar","'setQueAPI' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Qid'. Either include it or remove the dependency array.",["110"],["111"],["112"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"113","fix":"119"},{"desc":"115","fix":"120"},"Update the dependencies array to be: [formData.Qtype, tempOptionArr]",{"range":"121","text":"122"},"Update the dependencies array to be: [formData, optionArr]",{"range":"123","text":"124"},"Update the dependencies array to be: [Qid]",{"range":"125","text":"126"},{"range":"127","text":"122"},{"range":"128","text":"124"},[2279,2295],"[formData.Qtype, tempOptionArr]",[2428,2439],"[formData, optionArr]",[1595,1597],"[Qid]",[2948,2964],[3097,3108]]