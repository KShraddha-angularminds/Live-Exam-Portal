[{"/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/index.js":"1","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/App.js":"2","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/reportWebVitals.js":"3","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/Main.js":"4","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/Topics.js":"5","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/Questions.js":"6","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/EditQuestion.js":"7","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/AddQuestions.js":"8","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/Subjects.js":"9","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/LibPagination.js":"10","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/Login.js":"11"},{"size":517,"mtime":1644466008603,"results":"12","hashOfConfig":"13"},{"size":1093,"mtime":1644486444962,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1644466008603,"results":"15","hashOfConfig":"13"},{"size":2191,"mtime":1644497666518,"results":"16","hashOfConfig":"13"},{"size":8429,"mtime":1644476911005,"results":"17","hashOfConfig":"13"},{"size":10390,"mtime":1644476740726,"results":"18","hashOfConfig":"13"},{"size":18594,"mtime":1644475480648,"results":"19","hashOfConfig":"13"},{"size":22589,"mtime":1644499365599,"results":"20","hashOfConfig":"13"},{"size":8355,"mtime":1644476869342,"results":"21","hashOfConfig":"13"},{"size":1438,"mtime":1644466008603,"results":"22","hashOfConfig":"13"},{"size":6093,"mtime":1644497601958,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"12as3tn",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/index.js",[],["52","53"],"/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/App.js",["54"],"import './App.css';\r\nimport React from 'react';\r\nimport Main from './components/Main';\r\nimport Questions from './components/Questions';\r\nimport Subjects from './components/Subjects';\r\nimport Topics from './components/Topics';\r\nimport './components/Style.css';\r\n\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route\r\n} from 'react-router-dom';\r\nimport AddQuestions from './components/AddQuestions';\r\nimport EditQuestion from './components/EditQuestion';\r\nimport Login from './components/Login';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n      <div className='main-nav-bar'>\r\n      <Routes>\r\n      < Route path='/' element={<Login/>} />\r\n          < Route path='/questions' element={<Questions/>} />\r\n          < Route path='/subjects' element={<Subjects />} />\r\n          < Route path='/topics' element={<Topics />} />\r\n          < Route path='/add_question' element={<AddQuestions />} />\r\n          < Route path='/edit/:Qid' element={<EditQuestion />} />\r\n        </Routes>\r\n      </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/reportWebVitals.js",[],"/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/Main.js",["55"],"/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/Topics.js",["56","57","58","59","60","61","62","63","64","65"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Style.css';\r\nimport LibPagination from './LibPagination';\r\nimport { Link } from 'react-router-dom'\r\nimport Main from './Main';\r\n\r\nfunction Topic() {\r\n\r\n    const [tData, setTData] = useState([]);\r\n    const [x, setX] = useState(1);\r\n    const [topicAPI, setTopicAPI] = useState([]);\r\n    const [totalEntries, changeTotalEntries] = useState(0);\r\n    const [selectedValue, changeSelectedValue] = useState(10);\r\n    const [checkArr, setCheckArr] = useState([])\r\n    const [deleteResponse,setDelResonse]=useState('')\r\n    // const prevPage = () => {\r\n    //     changeX(x===25? x : prevx => prevx - 1);\r\n    // }\r\n    const tokenKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWRkMjgwYWU2ZDdkNzdjOGU0ZjY4ZjYiLCJfYWN0aXZlT3JnIjoiNjE5Y2U0YThlNTg2ODUxNDYxMGM4ZGE3IiwiaWF0IjoxNjQ0NDcxODg2LCJleHAiOjE2NDQ1MTUwODZ9.NLQvr2xjj57KvNuEkjzNpF3vG5iK58ZdZftvJGVd38o\"\r\n    useEffect(() => {\r\n        setX(1);\r\n    }, [selectedValue])\r\n\r\n\r\n    const changeX = no => {\r\n        setX(no);\r\n    }\r\n\r\n    const handleChange = e => {\r\n        changeSelectedValue(e.target.value);\r\n    }\r\n\r\n    console.log(selectedValue);\r\n    useEffect(() => {\r\n        axios.get(`http://admin.liveexamcenter.in/api/topics?page=${x}&limit=${selectedValue}&term=&topic=`, { headers: { authorization: tokenKey } })\r\n            .then(response => {\r\n                changeTotalEntries(response.data.totalCount);\r\n                console.log(response.data.result);\r\n                setTData(response.data.result);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }, [x, selectedValue,deleteResponse]);\r\n\r\nconsole.log(tData)\r\n\r\n    console.log(totalEntries)\r\n    //to set start and end index of qustions per page\r\n    let endIndex = x * selectedValue;\r\n    const startIndex = endIndex - selectedValue;\r\n    if (endIndex > totalEntries) endIndex = totalEntries;\r\n\r\n    const searchQues = (e) => {\r\n        axios.get(`http://admin.liveexamcenter.in/api/topics?page=${x}&limit=${selectedValue}&term=${e.target.value}&topic=`, { headers: { authorization: tokenKey } })\r\n            .then(response => {\r\n                changeTotalEntries(response.data.totalCount);\r\n                setTData(response.data.result);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n    const topicHandler = (e) => {\r\n        console.log(e.target.value)\r\n        axios.get(`http://admin.liveexamcenter.in/api/topics?page=${x}&limit=${selectedValue}&term=&topic=${e.target.value}`, { headers: { authorization: tokenKey } })\r\n            .then(response => {\r\n                changeTotalEntries(response.data.totalCount);\r\n                setTData(response.data.result);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const deleteQueHandler = (Qid) => {\r\n        \r\n        const result = window.confirm(\"Are you sure you want to delete the question, this can not be rolled back?\");\r\n        if (result) {\r\n            axios.delete(`http://admin.liveexamcenter.in/api/topics/${Qid}`, { headers: { authorization: tokenKey } })\r\n                .then(response => {\r\n                    changeTotalEntries(response.data.totalCount);\r\n                    setDelResonse(Qid)\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    const SingleDelete = (e, index) => {\r\n        if (e.target.checked) setCheckArr([...checkArr, index])\r\n        else {\r\n            document.getElementById(\"AllCheck\").checked=false \r\n            const tempArr = checkArr.filter(item => item !== index);\r\n            setCheckArr(tempArr)\r\n            console.log(checkArr)\r\n        }\r\n\r\n    }\r\n    const deleteSelected = (e) =>{\r\n        checkArr.map((index)=>{\r\n            axios.delete(`http://admin.liveexamcenter.in/api/topics/${index}`, { headers: { authorization: tokenKey } })\r\n            .then(response => {\r\n               setCheckArr([])\r\n               setDelResonse(e)\r\n               document.getElementById(\"tCheck\").checked = false\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        })\r\n    }\r\n    \r\n    const deleteAll = (e) =>{\r\n        if(e.target.checked)\r\n        {\r\n            var ele=document.getElementsByName('topicChk');  \r\n            for(var i=0; i<ele.length; i++){  \r\n                if(ele[i].type=='checkbox')  \r\n                    ele[i].checked=true;  \r\n            }\r\n        let temp= tData.map((data)=>{\r\n          \r\n            return data._id\r\n        })\r\n        setCheckArr(temp)\r\n        }\r\n        else\r\n        {\r\n            var ele=document.getElementsByName('topicChk');  \r\n            for(var i=0; i<ele.length; i++){  \r\n                if(ele[i].type=='checkbox')  \r\n                    ele[i].checked=false;  \r\n            }\r\n            setCheckArr([])\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (checkArr.length != 0)\r\n            document.getElementById(\"sDelete\").style.display = \"block\";\r\n        else document.getElementById(\"sDelete\").style.display = \"none\";\r\n    }, [checkArr])\r\n\r\n    console.log(checkArr)\r\n\r\n    return (\r\n        <div className>\r\n            <Main/>\r\n            <div className='title-div'>\r\n                <h3>Topics\r\n                    <Link to=\"/add_subject\">\r\n                        <button style={{ float: \"right\" }} className='btn btn-primary'>+ Add Topic</button></Link></h3>\r\n            </div>\r\n            <div className='main-div'>\r\n                <div className='header-div'>\r\n                    Show <select value={selectedValue} onChange={handleChange}>\r\n                        <option value={5}>5</option>\r\n                        <option value={10}>10</option>\r\n                        <option value={20}>20</option>\r\n                    </select>\r\n                    {' '} records per page\r\n\r\n                    <input style={{ float: 'right' }} type={'text'} placeholder='Search Question' onChange={(e) => searchQues(e)} />\r\n\r\n                </div>\r\n\r\n                <div className='questions-div'>\r\n                    <table className=\"table\">\r\n                        <tr>\r\n                            <td>\r\n                            <input type=\"checkbox\" id=\"AllCheck\" onClick={(e)=>deleteAll(e)}/>\r\n                            </td>\r\n                            <td> Sr.No </td><td> Topic </td><td>Subject</td><td> Actions </td>\r\n                            <td><button name='check' id=\"sDelete\" style={{ display: \"none\" }} onClick={(e)=>deleteSelected(e)} style={{border:\"none\"}}><i className=\"fa fa-trash\"></i></button></td>\r\n                        </tr>\r\n                        {tData && tData.map((topic, index) => {\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td>  <input type={'checkbox'} name=\"topicChk\" id='tCheck' value={index}  onClick={(e) => SingleDelete(e, topic._id)} /></td>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>\r\n                                        {topic.name}\r\n                                    </td>\r\n                                    <td>\r\n                                        {topic.subject && topic.subject.name}\r\n                                    </td>\r\n                                    \r\n                                    <td>\r\n                                        <button  onClick={() => deleteQueHandler(topic._id)} style={{border:\"none\"}}><i className=\"fa fa-trash\"></i></button>\r\n                                    </td>\r\n\r\n                                </tr>\r\n\r\n\r\n                            )\r\n                        })}\r\n                    </table>\r\n                </div>\r\n                {/* <div><ManualPagination currentPage={x} entriesPerPage={questionsPerPage} prevPage={prevPage} nextPage={nextPage} changeX={changeX} /></div> */}\r\n                <div className='footer'>\r\n                    {totalEntries && <LibPagination entriesPerPage={selectedValue} currentPage={x} totalEntries={totalEntries} changeX={changeX} startIndex={startIndex} endIndex={endIndex} />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Topic\r\n","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/Questions.js",["66","67","68","69","70","71","72"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Style.css';\r\nimport LibPagination from './LibPagination';\r\nimport { Link } from 'react-router-dom'\r\nimport { confirm } from \"react-confirm-box\";\r\nimport Main from './Main';\r\n\r\nfunction Questions() {\r\n\r\n    const [qData, setQData] = useState([]);\r\n    const [x, setX] = useState(1);\r\n    const [topicAPI, setTopicAPI] = useState([]);\r\n    const [totalEntries, changeTotalEntries] = useState(0);\r\n    const [selectedValue, changeSelectedValue] = useState(10);\r\n    const [checkArr, setCheckArr] = useState([])\r\n    const [deleteResponse,setDelResonse]=useState('')\r\n    // const prevPage = () => {\r\n    //     changeX(x===25? x : prevx => prevx - 1);\r\n    // }\r\n    const tokenKey=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWRkMjgwYWU2ZDdkNzdjOGU0ZjY4ZjYiLCJfYWN0aXZlT3JnIjoiNjE5Y2U0YThlNTg2ODUxNDYxMGM4ZGE3IiwiaWF0IjoxNjQ0NDcxODg2LCJleHAiOjE2NDQ1MTUwODZ9.NLQvr2xjj57KvNuEkjzNpF3vG5iK58ZdZftvJGVd38o\"\r\n    useEffect(() => {\r\n        setX(1);\r\n    }, [selectedValue])\r\n\r\n\r\n    const changeX = no => {\r\n        setX(no);\r\n    }\r\n\r\n    const handleChange = e => {\r\n        changeSelectedValue(e.target.value);\r\n    }\r\n\r\n    console.log(selectedValue);\r\n    useEffect(() => {\r\n        axios.get(`http://admin.liveexamcenter.in/api/questions?page=${x}&limit=${selectedValue}&term=&topic=`, { headers: { authorization: tokenKey } })\r\n            .then(response => {\r\n                changeTotalEntries(response.data.totalCount);\r\n                console.log(response.data.result);\r\n                setQData(response.data.result);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }, [x, selectedValue,deleteResponse]);\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get(`http://admin.liveexamcenter.in/api/topics?page=1&limit=5&term=`, { headers: { authorization: tokenKey } })\r\n            .then((res) => {\r\n                console.log(res.data.result)\r\n                setTopicAPI(res.data.result)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    console.log(totalEntries)\r\n    //to set start and end index of qustions per page\r\n    let endIndex = x * selectedValue;\r\n    const startIndex = endIndex - selectedValue;\r\n    if (endIndex > totalEntries) endIndex = totalEntries;\r\n\r\n    const searchQues = (e) => {\r\n        axios.get(`http://admin.liveexamcenter.in/api/questions?page=${x}&limit=${selectedValue}&term=${e.target.value}&topic=`, { headers: { authorization: tokenKey } })\r\n            .then(response => {\r\n                changeTotalEntries(response.data.totalCount);\r\n                setQData(response.data.result);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n    const topicHandler = (e) => {\r\n        console.log(e.target.value)\r\n        axios.get(`http://admin.liveexamcenter.in/api/questions?page=${x}&limit=${selectedValue}&term=&topic=${e.target.value}`, { headers: { authorization: tokenKey } })\r\n            .then(response => {\r\n                changeTotalEntries(response.data.totalCount);\r\n                setQData(response.data.result);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const deleteQueHandler = (Qid) => {\r\n        // confirm(\"box\")\r\n        const result = window.confirm(\"Are you sure you want to delete the question, this can not be rolled back?\");\r\n        if (result) {\r\n            axios.delete(`http://admin.liveexamcenter.in/api/questions/${Qid}`, { headers: { authorization: tokenKey } })\r\n                .then(response => {\r\n                    changeTotalEntries(response.data.totalCount);\r\n                    setQData(response.data.result);\r\n                    setDelResonse(Qid)\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n        }\r\n\r\n    }  \r\n    const SingleDelete = (e, index) => {\r\n        if (e.target.checked) setCheckArr([...checkArr, index])\r\n        else {\r\n            document.getElementById(\"AllCheck\").checked=false \r\n            const tempArr = checkArr.filter(item => item !== index);\r\n            setCheckArr(tempArr)\r\n            console.log(checkArr)\r\n        }\r\n\r\n    }\r\n\r\n    const deleteSelected = (e) =>{\r\n        checkArr.map((index)=>{\r\n            axios.delete(`http://admin.liveexamcenter.in/api/questions/${index}`, { headers: { authorization: tokenKey } })\r\n            .then(response => {\r\n               setCheckArr([])\r\n               setDelResonse(e)\r\n               document.getElementById(\"qCheck\").checked = false;\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        })\r\n    }\r\n    \r\n    const deleteAll = (e) =>{\r\n        if(e.target.checked)\r\n        {\r\n            var ele=document.getElementsByName('questionChk');  \r\n            for(var i=0; i<ele.length; i++){  \r\n                if(ele[i].type=='checkbox')  \r\n                    ele[i].checked=true;  \r\n            }\r\n        let temp= qData.map((data)=>{\r\n          \r\n            return data._id\r\n        })\r\n        setCheckArr(temp)\r\n        }\r\n        else\r\n        {\r\n            var ele=document.getElementsByName('questionChk');  \r\n            for(var i=0; i<ele.length; i++){  \r\n                if(ele[i].type=='checkbox')  \r\n                    ele[i].checked=false;  \r\n            }\r\n            setCheckArr([])\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (checkArr.length != 0)\r\n            document.getElementById(\"sDelete\").style.display = \"block\";\r\n        else document.getElementById(\"sDelete\").style.display = \"none\";\r\n    }, [checkArr])\r\n\r\n\r\n    return (\r\n        <div className>\r\n             <Main />\r\n            <div className='title-div'>\r\n                <h3>Questions\r\n                    <Link to=\"/add_question\">\r\n                        <button style={{ float: \"right\" }} className='btn btn-primary'>+ Add Question</button></Link></h3>\r\n            </div>\r\n            <div className='main-div'>\r\n                <div className='header-div'>\r\n                <input type=\"checkbox\" id=\"AllCheck\" onClick={(e)=>deleteAll(e)}/>\r\n                <button name='check' id=\"sDelete\" style={{ display: \"none\" }} className=\"btn btn-danger\" onClick={(e)=>deleteSelected(e)}>Delete {checkArr.length} Questions</button>\r\n                    Show <select value={selectedValue} onChange={handleChange}>\r\n                        <option value={5}>5</option>\r\n                        <option value={10}>10</option>\r\n                        <option value={20}>20</option>\r\n                    </select>\r\n                    {' '} records per page\r\n                    <select style={{ float: 'right' }} defaultValue={'default'} className='topics-dd' onClick={(e) => topicHandler(e)}>\r\n                        <option value=\"default\" disabled hidden>Select Topic</option>\r\n                        {topicAPI && topicAPI.map((topic, i) => {\r\n                            return <option key={i} value={topic._id}>{topic.name}</option>\r\n                        })}\r\n                    </select>\r\n\r\n                    <input style={{ float: 'right' }} type={'text'} placeholder='Search Question' onChange={(e) => searchQues(e)} />\r\n\r\n                </div>\r\n\r\n                <div className='questions-div'>\r\n\r\n                    {/*  qData && (questionsPerPage = qData.slice(0,10)) */}\r\n                    {qData && qData.map((question, index) => {\r\n                        const qType = question.type === 'MULTIPLE CHOICE' ? 'radio' : 'checkbox';\r\n                        return (\r\n                            <div key={index}>\r\n                                <hr />\r\n                                <div className='per-question'>\r\n                                    <input type={'checkbox'} name=\"questionChk\"  id='qCheck'  onClick={(e) => SingleDelete(e, question._id)} />\r\n                                    <div style={{display:\"inline-block\"}} dangerouslySetInnerHTML={{__html:question.questionText}} />\r\n                                    {/* {question.questionText} */}\r\n                                    <div className='options-div'>\r\n                                        {question.options.map((option, indexop) => {\r\n                                            return (\r\n                                                <div key={indexop}>\r\n                                                    <label>\r\n                                                        {console.log(typeof(option.isCorrect))}\r\n                                                        <input type={qType} name='option' value={indexop} id={indexop} checked={option.isCorrect} disabled={true}/>\r\n                                                        {/* {option.option} */}\r\n                                                        <div style={{display:\"inline-block\"}} dangerouslySetInnerHTML={{__html:option.option}} />\r\n                                                    </label>\r\n                                                </div>\r\n\r\n                                            )\r\n                                        })}\r\n                                        <Link to={`/edit/${question._id}`}>\r\n                                        <button style={{border:\"none\",padding:\"10px\"}}><i className='fa fa-edit'></i>Edit</button>\r\n                                        </Link>\r\n                                        <button style={{border:\"none\"}} onClick={() => deleteQueHandler(question._id)}><i className=\"fa fa-trash\"></i>Delete</button>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                {/* <div><ManualPagination currentPage={x} entriesPerPage={questionsPerPage} prevPage={prevPage} nextPage={nextPage} changeX={changeX} /></div> */}\r\n                <div className='footer'>\r\n                    {totalEntries && <LibPagination entriesPerPage={selectedValue} currentPage={x} totalEntries={totalEntries} changeX={changeX} startIndex={startIndex} endIndex={endIndex} />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Questions\r\n","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/EditQuestion.js",["73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport { Link, useParams, useNavigate } from 'react-router-dom'\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport Main from './Main';\n\nfunction EditQuestion() {\n    const { Qid } = useParams();\n    const navigate = useNavigate();\n    const [richEditorQ, setRichEditorQ] = useState(\"Enable\")\n    const [queAPI, setQueAPI] = useState([]);\n    const [subAPI, setSubAPI] = useState([]);\n    const [topicAPI, setTopicAPI] = useState([]);\n    const [isloading, setIsLoading] = useState(false)\n    const [richTextEditFlag, setRichTextEditFlag] = useState([])\n    const tokenKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWRkMjgwYWU2ZDdkNzdjOGU0ZjY4ZjYiLCJfYWN0aXZlT3JnIjoiNjE5Y2U0YThlNTg2ODUxNDYxMGM4ZGE3IiwiaWF0IjoxNjQ0NDcxODg2LCJleHAiOjE2NDQ1MTUwODZ9.NLQvr2xjj57KvNuEkjzNpF3vG5iK58ZdZftvJGVd38o\"\n    const [optionArr, setOptionArr] = useState([]);\n\n\n    const [formData, setFormData] = useState({\n        subject: \"\",\n        topic: \"\",\n        type: \"MULTIPLE CHOICE\",\n        questionText: '',\n        DiffLevel: \"easy\",\n        rightMarks: 1,\n        wrongMarks: 0,\n        options: null\n\n    })\n    useEffect(() => {\n        axios.get(`http://admin.liveexamcenter.in/api/questions/${Qid}`, { headers: { authorization: tokenKey } })\n            .then(response => {\n                console.log(response.data)\n                //setQidData({...response.data});\n                setFormData({\n                    ...formData,\n                    subject: response.data.subject._id,\n                    topic: response.data.topic._id,\n                    type: response.data.type,\n                    questionText: response.data.questionText,\n                    DiffLevel: response.data.diffLevel,\n                    rightMarks: response.data.rightMarks,\n                    wrongMarks: response.data.wrongMarks,\n\n                })\n                \n                \n                setOptionArr([...response.data.options])\n\n                setIsLoading(true)\n            })\n            .catch(error => {\n                console.log(error);\n            })\n\n\n    }, [Qid]);\n    isloading && console.log(optionArr)\n\n    useEffect(() => {\n     \n     \n    }, [optionArr]);\n    \n    //subject api call\n    useEffect(() => {\n\n        axios.get(`http://admin.liveexamcenter.in/api/subjects?page=1&limit=5&term=`, { headers: { authorization: tokenKey } })\n            .then((res) => {\n\n                setSubAPI(res.data.result)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n\n\n    }, [])\n    //Read API for Topics\n    useEffect(() => {\n\n        axios.get(`http://admin.liveexamcenter.in/api/topics?page=1&limit=5&term=`, { headers: { authorization: tokenKey } })\n            .then((res) => {\n\n                setTopicAPI(res.data.result)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n\n\n    }, [])\n\n    // useEffect(()=>{\n    //     //to deselect the option when question type changes\n    //      setOptionArr(tempOptionArr);\n\n    // },[formData.type])\n\n    useEffect(() => {\n        //to add the option array to formdata\n        setFormData({ ...formData, options: optionArr })\n    }, [optionArr])\n\n    const onChangeHandler = (e) => {\n        const ename = e.target.name;\n        if (e.target.name == 'rightMarks' || e.target.name == 'wrongMarks') {\n            setFormData({ ...formData, [ename]: parseInt(e.target.value) })\n        }\n        else\n            setFormData({ ...formData, [ename]: e.target.value })\n    }\n\n\n    function removeOption(index) {\n        // \n        const tempArr = [...optionArr];\n        tempArr.splice(index, 1)\n        setOptionArr(tempArr)\n\n\n    }\n    //console.log(optionArr)\n\n    const changeOptions = (i, input) => {\n        setOptionArr(prev => prev.map((option, ind) =>\n            i == ind ? { ...option, option: input } : option\n        ))\n\n    }\n    isloading && console.log(formData)\n    const SubmitForm = (e) => {\n        e.preventDefault();\n        // let navigate = Navigate();\n        axios.put(`http://admin.liveexamcenter.in/api/questions/${Qid}`, formData, { headers: { authorization: tokenKey } })\n            .then((res) => {\n                console.log(res.data)\n                navigate(\"/questions\")\n                // setTopicAPI(res.data.result)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n        console.log(optionArr)\n        console.log(formData)\n\n\n\n    }\n\n    const checkBoxOption = (i, e) => {\n        //To check option is checked or not and accordingly set value of iscorrect\n        e.checked == true ? setOptionArr(prev => prev.map((isCorrect, ind) =>\n            i == ind ? { ...isCorrect, isCorrect: true } : isCorrect\n        )) : setOptionArr(prev => prev.map((isCorrect, ind) =>\n            i == ind ? { ...isCorrect, isCorrect: false } : isCorrect\n        ))\n\n    }\n\n    const radioBoxOption = (i, e) => {\n        //To check option is checked or not and accordingly set value of iscorrect\n        e.checked == true ? setOptionArr(prev => prev.map((isCorrect, ind) =>\n            i == ind ? { ...isCorrect, isCorrect: true } : { ...isCorrect, isCorrect: false }\n        )) : setOptionArr(prev => prev.map((isCorrect, ind) =>\n            i == ind ? { ...isCorrect, isCorrect: false } : isCorrect\n        ))\n\n    }\n\n    const newOption = () => {\n        const temp = [...optionArr, { isCorrect: false, option: '',richTextEditor: false}]\n        setOptionArr(temp)\n\n    }\n    const changeRichTextQ = () => {\n        richEditorQ == \"Enable\" ? setRichEditorQ(\"Disable\") : setRichEditorQ(\"Enable\");\n    }\n    const changeRichText = (i) => {\n      \n        // setOptIndex(val)\n        // richEditor == \"Enable\" ? setRichEditor(\"Disable\") : setRichEditor(\"Enable\");\n         setOptionArr((prev) =>\n         prev.map((opt, j) => (i === j ? { ...opt, richTextEditor: opt.richTextEditor==true ? false :true } : opt))\n       );\n\n    }\n    const onChangeHandlerEditor = (e) => {\n        setFormData({ ...formData, questionText: e })\n    }\n    const onChangeHandlerEditorOp = (e,i) => {\n            console.log(e)\n            setOptionArr((prev) =>\n            prev.map((opt, j) => (i === j ? { ...opt, option: e } : opt))\n          );\n    }\n  \n    useEffect(() => {\n        if (isloading) {\n          let temp = optionArr.map((e) => {\n            e.richTextEditor = false;\n            return e;\n          });\n          setOptionArr(temp);\n        } else return;\n      }, [isloading]);\n    return (\n        <div>\n            <Main/>\n            {isloading &&\n                <div className='add-div'>\n                    <div className='add-header'>\n                        <h3>Add question</h3>\n                    </div>\n                    <pre>{JSON.stringify(formData, undefined, 2)}</pre>\n                    <form onSubmit={SubmitForm} id='myForm'>\n                        {/* middle part of add question page */}\n                        <div className='add-main'>\n                            {/* for select subject and topic */}\n                            <div className='add-main-row'>\n                                {/* for subject */}\n                                <div style={{ flex: '1' }} className='add-main-row1-col1' >\n                                    <label>Select Subject</label><br />\n                                    <select className='add-select' name='subject' value={formData.subject} onChange={onChangeHandler} required>\n                                        {subAPI && subAPI.map((subject, i) => {\n                                            return <option key={i} value={subject._id}>{subject.name}</option>\n                                        })}\n                                    </select>\n                                </div>\n                                {/* for topic */}\n                                <div style={{ flex: '1' }} className='add-main-row1-col1'>\n                                    <label>Select Topic</label><br />\n                                    <select className='add-select' name='topic' value={formData.topic} onChange={onChangeHandler}>\n                                        {/* <option value={QidData.topic && QidData.topic._id} >{QidData.topic && QidData.topic.name}</option>  */}\n                                        {topicAPI && topicAPI.map((topic, i) => {\n                                            return (topic.subject && topic.subject._id === formData.subject ?\n                                                <option key={i} value={topic._id}>{topic.name}</option> : null)\n                                        })}\n                                    </select>\n                                </div>\n                                {\n                                }       </div>\n                            {/* for question type, level and marks */}\n                            <div className='add-main-row'>\n                                {/* for question type and level of difficulty */}\n                                <div style={{ flex: '1' }} className='add-main-row2-col1' >\n                                    {/* for Question type */}\n                                    <div style={{ flex: '1' }} className='row2-div'>\n                                        <label>Question Type</label><br />\n                                        <select className='add-select' name='Qtype' value={formData.type} onChange={onChangeHandler}>\n                                            <option value={'MULTIPLE CHOICE'} >Multiple Choice</option>\n                                            <option value={'MULTIPLE RESPONSE'}>Multiple Response</option>\n                                            <option value={'FILL IN BLANKS'}>Fill in the blanks</option>\n                                        </select>\n                                    </div>\n                                    {/* for Difficulty Level */}\n                                    <div style={{ flex: '1' }} className='add-main-row2-half row2-div'>\n                                        <label>Difficulty Level</label><br />\n                                        <select className='add-select' name='DiffLevel' value={formData.DiffLevel} onChange={onChangeHandler}>\n                                            <option value={'easy'} >Easy</option>\n                                            <option value={'medium'}>Medium</option>\n                                            <option value={'hard'}>Hard</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div style={{ flex: '1' }} className='add-main-row2-col1 '>\n                                    <div style={{ flex: '1' }} >\n                                        <label>Right Marks</label><br />\n                                        <input type={'text'} name='rightMarks' className='add-input' value={formData.rightMarks} onChange={onChangeHandler} />\n                                    </div>\n                                    <div style={{ flex: '1' }} className='add-main-row2-half'>\n                                        <label>Wrong Marks</label>\n                                        <input type={'text'} name='wrongMarks' className='add-input' value={formData.wrongMarks} onChange={onChangeHandler} />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className='questionText-div'>\n                                <label>Question</label>\n                                {richEditorQ == \"Enable\" ?\n                                <textarea rows={5} style={{ width: '100%', borderRadius: '4px', border: '1px solid lightgrey' }} name='questionText' value={formData.questionText} onChange={onChangeHandler} />\n                                :\n\n                                <ReactQuill\n                                  \n                                    onChange={onChangeHandlerEditor}\n                                    value={formData.questionText}\n                                />\n\n                            }\n                            <button type='button' className='option-btm-btn' style={{ marginTop: '3px', marginLeft: '10px', backgroundColor: 'white', border: 'none' }} onClick={()=>changeRichTextQ()}>  {richEditorQ} Rich Text Editor</button>\n                       \n                                {/* <textarea rows={5} style={{ width: '100%', borderRadius: '4px', border: '1px solid lightgrey' }} name='questionText' defaultValue={formData.questionText} onChange={onChangeHandler} /> */}\n                            </div>\n                            <div>\n\n                                Options\n                                {optionArr.map((i, val) => {\n                                    return (\n                                        formData.type == 'MULTIPLE RESPONSE' ?\n                                            <div key={val}>\n                                                <div className='options-row' >\n                                                    <div className='options-col left'>\n                                                        <input type={'checkbox'} name={'isCorrect'} id={`radio-1`} name='isCorrect' checked={i.isCorrect} onChange={(e) => checkBoxOption(val, e.target)} /> Option {val + 1}\n                                                    </div>\n                                                    {\n                                                            i.richTextEditor==false  ?\n                                                                <textarea rows={4} id={`textarea-1`} className='options-col right' value={i.option} style={{ border: 'none', paddingLeft: '10px' }} name={`option`} onChange={(e) => changeOptions(val, e.target.value)} />\n                                                                :\n                                                                <ReactQuill\n                                                                    onChange={(e)=>onChangeHandlerEditorOp(e,val)}\n                                                                    value={i.option}\n                                                                />\n                                                        }\n                                                    {/* <textarea rows={4} id={`textarea-1`} className='options-col right' value={i.option}  style={{ border: 'none', paddingLeft: '10px' }} name={`option`} onChange={(e) => changeOptions(val, e.target.value)}/> */}\n                                                 \n                                                </div>\n                                                <button type='button' className='option-btm-btn' style={{ marginTop: '3px', marginRight: '10px', backgroundColor: 'white', border: 'none' }}> Remove Option</button>|\n                                                <button type='button' className='option-btm-btn' style={{ marginTop: '3px', marginLeft: '10px', backgroundColor: 'white', border: 'none' }} onClick={()=>changeRichText(val)}>{i.richTextEditor===false ? \"Enable\" : \"Disable\"} Rich Text Editor</button>\n                                            </div> :\n                                            <div key={val}>\n                                                <div className='options-row' >\n                                                    <div className='options-col left'>\n                                                        <input type={'radio'} name={'isCorrect'} id={`radio-1`} name='isCorrect' checked={i.isCorrect} onChange={(e) => radioBoxOption(val, e.target)} /> Option {val + 1}\n                                                    </div>\n                                                    {/* <textarea rows={4} id={`textarea-1`} className='options-col right' value={i.option} style={{ border: 'none', paddingLeft: '10px' }} name={`option`} onChange={(e) => changeOptions(val, e.target.value)}/> */}\n                                                    {\n                                                             i.richTextEditor==false  ?\n                                                                <textarea rows={4} id={`textarea-1`} className='options-col right' value={i.option} style={{ border: 'none', paddingLeft: '10px' }} name={`option`} onChange={(e) => changeOptions(val, e.target.value)} />\n                                                                :\n                                                                <ReactQuill\n                                                                    onChange={(e)=>onChangeHandlerEditorOp(e,val)}\n                                                                    value={i.option}\n                                                                />\n                                                        }\n                                                </div>\n                                                <button type='button' className='option-btm-btn' style={{ marginTop: '3px', marginRight: '10px', backgroundColor: 'white', border: 'none' }} onClick={() => removeOption(val)}> Remove Option</button>|\n                                                <button type='button' className='option-btm-btn' style={{ marginTop: '3px', marginLeft: '10px', backgroundColor: 'white', border: 'none' }} onClick={()=>changeRichText(val)}> {i.richTextEditor===false ? \"Enable\" : \"Disable\"} Rich Text Editor</button>\n                                            </div>\n                                    )\n                                })}\n\n                            </div>\n                            <button type='button' onClick={newOption}>+Add Option</button>\n                        </div>\n                        <div className='add-footer'>\n                            <button className='btn btn-primary' style={{ padding: '10px 15px 10px 15px', fontSize: '20px' }} type='submit'>Update question</button>\n                            <Link to='/questions'>\n                                <button type='button' className='btn btn-light' style={{ marginLeft: '30px', fontSize: '20px', border: 'none', outline: 'none', padding: '6px 10px 6px 10px' }}>Cancel</button>\n                            </Link>\n                        </div>\n                    </form>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default EditQuestion\n","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/AddQuestions.js",["97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127"],"/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/Subjects.js",["128","129","130","131","132","133","134","135","136","137"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Style.css';\r\nimport LibPagination from './LibPagination';\r\nimport { Link } from 'react-router-dom'\r\nimport Main from './Main';\r\n//import { confirm } from \"react-confirm-box\";\r\n\r\nfunction Subject() {\r\n\r\n    const [sData, setSData] = useState([]);\r\n    const [x, setX] = useState(1);\r\n    const [topicAPI, setTopicAPI] = useState([]);\r\n    const [totalEntries, changeTotalEntries] = useState(0);\r\n    const [selectedValue, changeSelectedValue] = useState(10);\r\n    const [checkArr, setCheckArr] = useState([])\r\n    const [deleteResponse,setDelResonse]=useState('')\r\n    // const prevPage = () => {\r\n    //     changeX(x===25? x : prevx => prevx - 1);\r\n    // }\r\n    const tokenKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWRkMjgwYWU2ZDdkNzdjOGU0ZjY4ZjYiLCJfYWN0aXZlT3JnIjoiNjE5Y2U0YThlNTg2ODUxNDYxMGM4ZGE3IiwiaWF0IjoxNjQ0NDcxODg2LCJleHAiOjE2NDQ1MTUwODZ9.NLQvr2xjj57KvNuEkjzNpF3vG5iK58ZdZftvJGVd38o\"\r\n    useEffect(() => {\r\n        setX(1);\r\n    }, [selectedValue])\r\n\r\n\r\n    const changeX = no => {\r\n        setX(no);\r\n    }\r\n\r\n    const handleChange = e => {\r\n        changeSelectedValue(e.target.value);\r\n    }\r\n\r\n    // console.log(selectedValue);\r\n    useEffect(() => {\r\n        axios.get(`http://admin.liveexamcenter.in/api/subjects?page=${x}&limit=${selectedValue}&term=&topic=`, { headers: { authorization: tokenKey } })\r\n            .then(response => {\r\n                changeTotalEntries(response.data.totalCount);\r\n                console.log(response.data.result);\r\n                setSData(response.data.result);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }, [x, selectedValue,deleteResponse]);\r\n\r\n\r\n\r\n    // console.log(totalEntries)\r\n    //to set start and end index of qustions per page\r\n    let endIndex = x * selectedValue;\r\n    const startIndex = endIndex - selectedValue;\r\n    if (endIndex > totalEntries) endIndex = totalEntries;\r\n\r\n    const searchQues = (e) => {\r\n        axios.get(`http://admin.liveexamcenter.in/api/subjects?page=${x}&limit=${selectedValue}&term=${e.target.value}&topic=`, { headers: { authorization: tokenKey } })\r\n            .then(response => {\r\n                changeTotalEntries(response.data.totalCount);\r\n                setSData(response.data.result);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n    const topicHandler = (e) => {\r\n        console.log(e.target.value)\r\n        axios.get(`http://admin.liveexamcenter.in/api/subjects?page=${x}&limit=${selectedValue}&term=&topic=${e.target.value}`, { headers: { authorization: tokenKey } })\r\n            .then(response => {\r\n                changeTotalEntries(response.data.totalCount);\r\n                setSData(response.data.result);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const deleteQueHandler = (Qid) => {\r\n      \r\n        const result = window.confirm(\"Are you sure you want to delete the question, this can not be rolled back?\");\r\n        if (result) {\r\n            axios.delete(`http://admin.liveexamcenter.in/api/subjects/${Qid}`, { headers: { authorization: tokenKey } })\r\n                .then(response => {\r\n                    changeTotalEntries(response.data.totalCount);\r\n                    setDelResonse(Qid)\r\n                    document.getElementById(\"sDelete\").selected=false;\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    const SingleDelete = (e, index) => {\r\n        if (e.target.checked) setCheckArr([...checkArr, index])\r\n        else {\r\n            document.getElementById(\"AllCheck\").checked=false \r\n            const tempArr = checkArr.filter(item => item !== index);\r\n            setCheckArr(tempArr)\r\n            console.log(checkArr)\r\n        }\r\n\r\n    }\r\n    const deleteSelected = (e) =>{\r\n        checkArr.map((index)=>{\r\n            axios.delete(`http://admin.liveexamcenter.in/api/subjects/${index}`, { headers: { authorization: tokenKey } })\r\n            .then(response => {\r\n               setCheckArr([])\r\n                setDelResonse(e)\r\n               document.getElementById(\"sCheck\").checked = false;\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        })\r\n    }\r\n    \r\n    const deleteAll = (e) =>{\r\n        if(e.target.checked)\r\n        {\r\n            var ele=document.getElementsByName('subjectChk');  \r\n            for(var i=0; i<ele.length; i++){  \r\n                if(ele[i].type=='checkbox')  \r\n                    ele[i].checked=true;  \r\n            }\r\n        let temp= sData.map((data)=>{\r\n          \r\n            return data._id\r\n        })\r\n        setCheckArr(temp)\r\n        }\r\n        else\r\n        {\r\n            var ele=document.getElementsByName('subjectChk');  \r\n            for(var i=0; i<ele.length; i++){  \r\n                if(ele[i].type=='checkbox')  \r\n                    ele[i].checked=false;  \r\n            }\r\n            setCheckArr([])\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (checkArr.length != 0)\r\n            document.getElementById(\"sDelete\").style.display = \"block\";\r\n        else document.getElementById(\"sDelete\").style.display = \"none\";\r\n    }, [checkArr])\r\n\r\n    console.log(checkArr)\r\n    return (\r\n        <div className>\r\n            <Main/>\r\n            <div className='title-div'>\r\n                <h3>Subjects\r\n                    <Link to=\"/add_subject\">\r\n                        <button style={{ float: \"right\" }} className='btn btn-primary'>+ Add Subject</button></Link></h3>\r\n            </div>\r\n            <div className='main-div'>\r\n                <div className='header-div'>\r\n                    Show <select value={selectedValue} onChange={handleChange}>\r\n                        <option value={5}>5</option>\r\n                        <option value={10}>10</option>\r\n                        <option value={20}>20</option>\r\n                    </select>\r\n                    {' '} records per page\r\n\r\n                    <input style={{ float: 'right' }} type={'text'} placeholder='Search Question' onChange={(e) => searchQues(e)} />\r\n\r\n                </div>\r\n\r\n                <div className='questions-div'>\r\n                    <table className=\"table\">\r\n                        <tr>\r\n                            <td>\r\n                                <input type=\"checkbox\" id=\"AllCheck\" onClick={(e)=>deleteAll(e)}/>\r\n                            </td>\r\n                            <td> Sr.No </td><td> Subject </td><td> Actions </td>\r\n                            <td><button name='check' id=\"sDelete\" style={{ display: \"none\" }} onClick={(e)=>deleteSelected(e)} style={{border:\"none\"}}><i className=\"fa fa-trash\"></i></button></td>\r\n                        </tr>\r\n                        {sData && sData.map((subject, index) => {\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td>  <input type={'checkbox'} name=\"subjectChk\" value={index} id={'sCheck'} onClick={(e) => SingleDelete(e, subject._id)} /></td>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>\r\n                                        {subject.name}\r\n                                    </td>\r\n                                    <td>\r\n                                        <button onClick={() => deleteQueHandler(subject._id)} style={{border:\"none\"}}><i className=\"fa fa-trash\"></i></button>\r\n                                    </td>\r\n\r\n                                </tr>\r\n\r\n\r\n                            )\r\n                        })}\r\n                    </table>\r\n                </div>\r\n                {/* <div><ManualPagination currentPage={x} entriesPerPage={questionsPerPage} prevPage={prevPage} nextPage={nextPage} changeX={changeX} /></div> */}\r\n                <div className='footer'>\r\n                    {totalEntries && <LibPagination entriesPerPage={selectedValue} currentPage={x} totalEntries={totalEntries} changeX={changeX} startIndex={startIndex} endIndex={endIndex} />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subject\r\n","/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/LibPagination.js",[],"/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/src/components/Login.js",["138","139","140","141","142","143"],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":12},{"ruleId":"152","severity":1,"message":"153","line":25,"column":6,"nodeType":"154","endLine":25,"endColumn":8,"suggestions":"155"},{"ruleId":"148","severity":1,"message":"156","line":12,"column":12,"nodeType":"150","messageId":"151","endLine":12,"endColumn":20},{"ruleId":"148","severity":1,"message":"157","line":12,"column":22,"nodeType":"150","messageId":"151","endLine":12,"endColumn":33},{"ruleId":"148","severity":1,"message":"158","line":65,"column":11,"nodeType":"150","messageId":"151","endLine":65,"endColumn":23},{"ruleId":"159","severity":1,"message":"160","line":104,"column":29,"nodeType":"161","messageId":"162","endLine":104,"endColumn":31},{"ruleId":"163","severity":1,"message":"164","line":122,"column":31,"nodeType":"165","messageId":"166","endLine":122,"endColumn":33},{"ruleId":"167","severity":1,"message":"168","line":133,"column":17,"nodeType":"150","messageId":"169","endLine":133,"endColumn":20},{"ruleId":"167","severity":1,"message":"170","line":134,"column":21,"nodeType":"150","messageId":"169","endLine":134,"endColumn":22},{"ruleId":"163","severity":1,"message":"164","line":135,"column":31,"nodeType":"165","messageId":"166","endLine":135,"endColumn":33},{"ruleId":"163","severity":1,"message":"171","line":144,"column":29,"nodeType":"165","messageId":"166","endLine":144,"endColumn":31},{"ruleId":"172","severity":1,"message":"173","line":179,"column":128,"nodeType":"174","messageId":"175","endLine":179,"endColumn":151},{"ruleId":"148","severity":1,"message":"176","line":6,"column":10,"nodeType":"150","messageId":"151","endLine":6,"endColumn":17},{"ruleId":"159","severity":1,"message":"160","line":120,"column":29,"nodeType":"161","messageId":"162","endLine":120,"endColumn":31},{"ruleId":"163","severity":1,"message":"164","line":138,"column":31,"nodeType":"165","messageId":"166","endLine":138,"endColumn":33},{"ruleId":"167","severity":1,"message":"168","line":149,"column":17,"nodeType":"150","messageId":"169","endLine":149,"endColumn":20},{"ruleId":"167","severity":1,"message":"170","line":150,"column":21,"nodeType":"150","messageId":"169","endLine":150,"endColumn":22},{"ruleId":"163","severity":1,"message":"164","line":151,"column":31,"nodeType":"165","messageId":"166","endLine":151,"endColumn":33},{"ruleId":"163","severity":1,"message":"171","line":159,"column":29,"nodeType":"165","messageId":"166","endLine":159,"endColumn":31},{"ruleId":"148","severity":1,"message":"177","line":12,"column":12,"nodeType":"150","messageId":"151","endLine":12,"endColumn":18},{"ruleId":"148","severity":1,"message":"178","line":12,"column":20,"nodeType":"150","messageId":"151","endLine":12,"endColumn":29},{"ruleId":"148","severity":1,"message":"179","line":16,"column":12,"nodeType":"150","messageId":"151","endLine":16,"endColumn":28},{"ruleId":"148","severity":1,"message":"180","line":16,"column":30,"nodeType":"150","messageId":"151","endLine":16,"endColumn":49},{"ruleId":"152","severity":1,"message":"181","line":59,"column":8,"nodeType":"154","endLine":59,"endColumn":13,"suggestions":"182"},{"ruleId":"152","severity":1,"message":"181","line":105,"column":8,"nodeType":"154","endLine":105,"endColumn":19,"suggestions":"183"},{"ruleId":"163","severity":1,"message":"164","line":109,"column":27,"nodeType":"165","messageId":"166","endLine":109,"endColumn":29},{"ruleId":"163","severity":1,"message":"164","line":109,"column":60,"nodeType":"165","messageId":"166","endLine":109,"endColumn":62},{"ruleId":"163","severity":1,"message":"164","line":129,"column":15,"nodeType":"165","messageId":"166","endLine":129,"endColumn":17},{"ruleId":"163","severity":1,"message":"164","line":155,"column":19,"nodeType":"165","messageId":"166","endLine":155,"endColumn":21},{"ruleId":"163","severity":1,"message":"164","line":156,"column":15,"nodeType":"165","messageId":"166","endLine":156,"endColumn":17},{"ruleId":"163","severity":1,"message":"164","line":158,"column":15,"nodeType":"165","messageId":"166","endLine":158,"endColumn":17},{"ruleId":"163","severity":1,"message":"164","line":165,"column":19,"nodeType":"165","messageId":"166","endLine":165,"endColumn":21},{"ruleId":"163","severity":1,"message":"164","line":166,"column":15,"nodeType":"165","messageId":"166","endLine":166,"endColumn":17},{"ruleId":"163","severity":1,"message":"164","line":168,"column":15,"nodeType":"165","messageId":"166","endLine":168,"endColumn":17},{"ruleId":"163","severity":1,"message":"164","line":179,"column":21,"nodeType":"165","messageId":"166","endLine":179,"endColumn":23},{"ruleId":"163","severity":1,"message":"164","line":186,"column":86,"nodeType":"165","messageId":"166","endLine":186,"endColumn":88},{"ruleId":"152","severity":1,"message":"184","line":208,"column":10,"nodeType":"154","endLine":208,"endColumn":21,"suggestions":"185"},{"ruleId":"163","severity":1,"message":"164","line":281,"column":46,"nodeType":"165","messageId":"166","endLine":281,"endColumn":48},{"ruleId":"163","severity":1,"message":"164","line":301,"column":55,"nodeType":"165","messageId":"166","endLine":301,"endColumn":57},{"ruleId":"172","severity":1,"message":"173","line":305,"column":116,"nodeType":"174","messageId":"175","endLine":305,"endColumn":132},{"ruleId":"163","severity":1,"message":"164","line":308,"column":77,"nodeType":"165","messageId":"166","endLine":308,"endColumn":79},{"ruleId":"172","severity":1,"message":"173","line":325,"column":113,"nodeType":"174","messageId":"175","endLine":325,"endColumn":129},{"ruleId":"163","severity":1,"message":"164","line":329,"column":78,"nodeType":"165","messageId":"166","endLine":329,"endColumn":80},{"ruleId":"148","severity":1,"message":"186","line":6,"column":10,"nodeType":"150","messageId":"151","endLine":6,"endColumn":29},{"ruleId":"148","severity":1,"message":"187","line":15,"column":25,"nodeType":"150","messageId":"151","endLine":15,"endColumn":41},{"ruleId":"152","severity":1,"message":"188","line":89,"column":6,"nodeType":"154","endLine":89,"endColumn":22,"suggestions":"189"},{"ruleId":"152","severity":1,"message":"181","line":94,"column":6,"nodeType":"154","endLine":94,"endColumn":17,"suggestions":"190"},{"ruleId":"163","severity":1,"message":"164","line":101,"column":22,"nodeType":"165","messageId":"166","endLine":101,"endColumn":24},{"ruleId":"163","severity":1,"message":"164","line":101,"column":55,"nodeType":"165","messageId":"166","endLine":101,"endColumn":57},{"ruleId":"163","severity":1,"message":"171","line":102,"column":22,"nodeType":"165","messageId":"166","endLine":102,"endColumn":24},{"ruleId":"163","severity":1,"message":"164","line":110,"column":24,"nodeType":"165","messageId":"166","endLine":110,"endColumn":26},{"ruleId":"163","severity":1,"message":"164","line":128,"column":11,"nodeType":"165","messageId":"166","endLine":128,"endColumn":13},{"ruleId":"163","severity":1,"message":"164","line":132,"column":15,"nodeType":"165","messageId":"166","endLine":132,"endColumn":17},{"ruleId":"163","severity":1,"message":"164","line":165,"column":38,"nodeType":"165","messageId":"166","endLine":165,"endColumn":40},{"ruleId":"163","severity":1,"message":"164","line":183,"column":15,"nodeType":"165","messageId":"166","endLine":183,"endColumn":17},{"ruleId":"163","severity":1,"message":"164","line":186,"column":15,"nodeType":"165","messageId":"166","endLine":186,"endColumn":17},{"ruleId":"163","severity":1,"message":"164","line":191,"column":15,"nodeType":"165","messageId":"166","endLine":191,"endColumn":17},{"ruleId":"163","severity":1,"message":"164","line":222,"column":17,"nodeType":"165","messageId":"166","endLine":222,"endColumn":19},{"ruleId":"163","severity":1,"message":"164","line":234,"column":50,"nodeType":"165","messageId":"166","endLine":234,"endColumn":52},{"ruleId":"163","severity":1,"message":"164","line":243,"column":11,"nodeType":"165","messageId":"166","endLine":243,"endColumn":13},{"ruleId":"163","severity":1,"message":"164","line":254,"column":11,"nodeType":"165","messageId":"166","endLine":254,"endColumn":13},{"ruleId":"163","severity":1,"message":"164","line":263,"column":24,"nodeType":"165","messageId":"166","endLine":263,"endColumn":26},{"ruleId":"163","severity":1,"message":"164","line":264,"column":22,"nodeType":"165","messageId":"166","endLine":264,"endColumn":24},{"ruleId":"163","severity":1,"message":"164","line":265,"column":27,"nodeType":"165","messageId":"166","endLine":265,"endColumn":29},{"ruleId":"163","severity":1,"message":"164","line":266,"column":27,"nodeType":"165","messageId":"166","endLine":266,"endColumn":29},{"ruleId":"163","severity":1,"message":"164","line":267,"column":29,"nodeType":"165","messageId":"166","endLine":267,"endColumn":31},{"ruleId":"159","severity":1,"message":"160","line":269,"column":33,"nodeType":"161","messageId":"162","endLine":269,"endColumn":35},{"ruleId":"163","severity":1,"message":"164","line":270,"column":25,"nodeType":"165","messageId":"166","endLine":270,"endColumn":27},{"ruleId":"163","severity":1,"message":"164","line":420,"column":28,"nodeType":"165","messageId":"166","endLine":420,"endColumn":30},{"ruleId":"163","severity":1,"message":"164","line":460,"column":37,"nodeType":"165","messageId":"166","endLine":460,"endColumn":39},{"ruleId":"172","severity":1,"message":"173","line":468,"column":31,"nodeType":"174","messageId":"175","endLine":468,"endColumn":47},{"ruleId":"163","severity":1,"message":"164","line":474,"column":45,"nodeType":"165","messageId":"166","endLine":474,"endColumn":47},{"ruleId":"172","severity":1,"message":"173","line":542,"column":31,"nodeType":"174","messageId":"175","endLine":542,"endColumn":47},{"ruleId":"163","severity":1,"message":"164","line":548,"column":45,"nodeType":"165","messageId":"166","endLine":548,"endColumn":47},{"ruleId":"148","severity":1,"message":"156","line":13,"column":12,"nodeType":"150","messageId":"151","endLine":13,"endColumn":20},{"ruleId":"148","severity":1,"message":"157","line":13,"column":22,"nodeType":"150","messageId":"151","endLine":13,"endColumn":33},{"ruleId":"148","severity":1,"message":"158","line":66,"column":11,"nodeType":"150","messageId":"151","endLine":66,"endColumn":23},{"ruleId":"159","severity":1,"message":"160","line":106,"column":29,"nodeType":"161","messageId":"162","endLine":106,"endColumn":31},{"ruleId":"163","severity":1,"message":"164","line":124,"column":31,"nodeType":"165","messageId":"166","endLine":124,"endColumn":33},{"ruleId":"167","severity":1,"message":"168","line":135,"column":17,"nodeType":"150","messageId":"169","endLine":135,"endColumn":20},{"ruleId":"167","severity":1,"message":"170","line":136,"column":21,"nodeType":"150","messageId":"169","endLine":136,"endColumn":22},{"ruleId":"163","severity":1,"message":"164","line":137,"column":31,"nodeType":"165","messageId":"166","endLine":137,"endColumn":33},{"ruleId":"163","severity":1,"message":"171","line":146,"column":29,"nodeType":"165","messageId":"166","endLine":146,"endColumn":31},{"ruleId":"172","severity":1,"message":"173","line":180,"column":128,"nodeType":"174","messageId":"175","endLine":180,"endColumn":151},{"ruleId":"148","severity":1,"message":"191","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":14},{"ruleId":"148","severity":1,"message":"192","line":11,"column":22,"nodeType":"150","messageId":"151","endLine":11,"endColumn":35},{"ruleId":"163","severity":1,"message":"171","line":32,"column":43,"nodeType":"165","messageId":"166","endLine":32,"endColumn":45},{"ruleId":"152","severity":1,"message":"193","line":48,"column":6,"nodeType":"154","endLine":48,"endColumn":14,"suggestions":"194"},{"ruleId":"152","severity":1,"message":"153","line":74,"column":6,"nodeType":"154","endLine":74,"endColumn":8,"suggestions":"195"},{"ruleId":"163","severity":1,"message":"164","line":100,"column":29,"nodeType":"165","messageId":"166","endLine":100,"endColumn":31},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'Main' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["198"],"'topicAPI' is assigned a value but never used.","'setTopicAPI' is assigned a value but never used.","'topicHandler' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'ele' is already defined.","redeclared","'i' is already defined.","Expected '!==' and instead saw '!='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'confirm' is defined but never used.","'queAPI' is assigned a value but never used.","'setQueAPI' is assigned a value but never used.","'richTextEditFlag' is assigned a value but never used.","'setRichTextEditFlag' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["199"],["200"],"React Hook useEffect has a missing dependency: 'optionArr'. Either include it or remove the dependency array.",["201"],"'computeHeadingLevel' is defined but never used.","'setValidateSameQ' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'tempOptionArr'. Either include it or remove the dependency array.",["202"],["203"],"'Link' is defined but never used.","'setGoogleData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'formData' and 'navigate'. Either include them or remove the dependency array.",["204"],["205"],"no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"210","fix":"216"},{"desc":"217","fix":"218"},{"desc":"206","fix":"219"},"Update the dependencies array to be: [navigate]",{"range":"220","text":"221"},"Update the dependencies array to be: [Qid, formData]",{"range":"222","text":"223"},"Update the dependencies array to be: [formData, optionArr]",{"range":"224","text":"225"},"Update the dependencies array to be: [isloading, optionArr]",{"range":"226","text":"227"},"Update the dependencies array to be: [formData.Qtype, tempOptionArr]",{"range":"228","text":"229"},{"range":"230","text":"225"},"Update the dependencies array to be: [formData, navigate, submit]",{"range":"231","text":"232"},{"range":"233","text":"221"},[873,875],"[navigate]",[2184,2189],"[Qid, formData]",[3290,3301],"[formData, optionArr]",[6584,6595],"[isloading, optionArr]",[2620,2636],"[formData.Qtype, tempOptionArr]",[2761,2772],[1402,1410],"[formData, navigate, submit]",[2205,2207]]