{"ast":null,"code":"\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n} // Generated by CoffeeScript 2.5.1\n\n\nvar SpecialString, i, len, prop, ref;\n\nmodule.exports = SpecialString = function () {\n  var self;\n\n  var SpecialString = /*#__PURE__*/function () {\n    function SpecialString(str) {\n      _classCallCheck(this, SpecialString);\n\n      if (!(this instanceof self)) {\n        return new self(str);\n      }\n\n      this._str = String(str);\n      this._len = 0;\n    }\n\n    _createClass(SpecialString, [{\n      key: \"_getStr\",\n      value: function _getStr() {\n        return this._str;\n      }\n    }, {\n      key: \"set\",\n      value: function set(str) {\n        this._str = String(str);\n        return this;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new SpecialString(this._str);\n      }\n    }, {\n      key: \"isEmpty\",\n      value: function isEmpty() {\n        return this._str === '';\n      }\n    }, {\n      key: \"isOnlySpecialChars\",\n      value: function isOnlySpecialChars() {\n        return !this.isEmpty() && this.length === 0;\n      }\n    }, {\n      key: \"_reset\",\n      value: function _reset() {\n        return this._len = 0;\n      }\n    }, {\n      key: \"splitIn\",\n      value: function splitIn(limit) {\n        var trimLeftEachLine = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var buffer, bufferLength, justSkippedSkipChar, lines;\n        buffer = '';\n        bufferLength = 0;\n        lines = [];\n        justSkippedSkipChar = false;\n\n        self._countChars(this._str, function (char, charLength) {\n          if (bufferLength > limit || bufferLength + charLength > limit) {\n            lines.push(buffer);\n            buffer = '';\n            bufferLength = 0;\n          }\n\n          if (bufferLength === 0 && char === ' ' && !justSkippedSkipChar && trimLeftEachLine) {\n            return justSkippedSkipChar = true;\n          } else {\n            buffer += char;\n            bufferLength += charLength;\n            return justSkippedSkipChar = false;\n          }\n        });\n\n        if (buffer.length > 0) {\n          lines.push(buffer);\n        }\n\n        return lines;\n      }\n    }, {\n      key: \"trim\",\n      value: function trim() {\n        return new SpecialString(this.str.trim());\n      }\n    }, {\n      key: \"_getLength\",\n      value: function _getLength() {\n        var sum;\n        sum = 0;\n\n        self._countChars(this._str, function (char, charLength) {\n          sum += charLength;\n        });\n\n        return sum;\n      }\n    }, {\n      key: \"cut\",\n      value: function cut(from, to) {\n        var _this = this;\n\n        var trimLeft = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var after, before, cur, cut;\n\n        if (to == null) {\n          to = this.length;\n        }\n\n        from = parseInt(from);\n\n        if (from >= to) {\n          throw Error(\"`from` shouldn't be larger than `to`\");\n        }\n\n        before = '';\n        after = '';\n        cut = '';\n        cur = 0;\n\n        self._countChars(this._str, function (char, charLength) {\n          if (_this.str === 'ab<tag>') {\n            console.log(charLength, char);\n          }\n\n          if (cur === from && char.match(/^\\s+$/) && trimLeft) {\n            return;\n          }\n\n          if (cur < from) {\n            before += char; // let's be greedy\n          } else if (cur < to || cur + charLength <= to) {\n            cut += char;\n          } else {\n            after += char;\n          }\n\n          cur += charLength;\n        });\n\n        this._str = before + after;\n\n        this._reset();\n\n        return new SpecialString(cut);\n      }\n    }], [{\n      key: \"_countChars\",\n      value: function _countChars(text, cb) {\n        var char, charLength, m;\n\n        while (text.length !== 0) {\n          if (m = text.match(self._tagRx)) {\n            char = m[0];\n            charLength = 0;\n            text = text.substr(char.length, text.length);\n          } else if (m = text.match(self._quotedHtmlRx)) {\n            char = m[0];\n            charLength = 1;\n            text = text.substr(char.length, text.length);\n          } else if (text.match(self._tabRx)) {\n            char = \"\\t\";\n            charLength = 8;\n            text = text.substr(1, text.length);\n          } else {\n            char = text[0];\n            charLength = 1;\n            text = text.substr(1, text.length);\n          }\n\n          cb.call(null, char, charLength);\n        }\n      }\n    }]);\n\n    return SpecialString;\n  }();\n\n  ;\n  self = SpecialString;\n  SpecialString._tabRx = /^\\t/;\n  SpecialString._tagRx = /^<[^>]+>/;\n  SpecialString._quotedHtmlRx = /^&(gt|lt|quot|amp|apos|sp);/;\n  return SpecialString;\n}.call(void 0);\n\nref = ['str', 'length'];\n\nfor (i = 0, len = ref.length; i < len; i++) {\n  prop = ref[i];\n\n  (function () {\n    var methodName;\n    methodName = '_get' + prop[0].toUpperCase() + prop.substr(1, prop.length);\n    return SpecialString.prototype.__defineGetter__(prop, function () {\n      return this[methodName]();\n    });\n  })();\n}","map":{"version":3,"sources":["/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/node_modules/renderkid/lib/layout/SpecialString.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","SpecialString","len","prop","ref","module","exports","self","str","_str","String","_len","value","_getStr","set","clone","isEmpty","isOnlySpecialChars","_reset","splitIn","limit","trimLeftEachLine","arguments","undefined","buffer","bufferLength","justSkippedSkipChar","lines","_countChars","char","charLength","push","trim","_getLength","sum","cut","from","to","_this","trimLeft","after","before","cur","parseInt","Error","console","log","match","text","cb","m","_tagRx","substr","_quotedHtmlRx","_tabRx","call","methodName","toUpperCase","__defineGetter__"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// Generated by CoffeeScript 2.5.1\nvar SpecialString, i, len, prop, ref;\n\nmodule.exports = SpecialString = function () {\n  var self;\n\n  var SpecialString = /*#__PURE__*/function () {\n    function SpecialString(str) {\n      _classCallCheck(this, SpecialString);\n\n      if (!(this instanceof self)) {\n        return new self(str);\n      }\n\n      this._str = String(str);\n      this._len = 0;\n    }\n\n    _createClass(SpecialString, [{\n      key: \"_getStr\",\n      value: function _getStr() {\n        return this._str;\n      }\n    }, {\n      key: \"set\",\n      value: function set(str) {\n        this._str = String(str);\n        return this;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new SpecialString(this._str);\n      }\n    }, {\n      key: \"isEmpty\",\n      value: function isEmpty() {\n        return this._str === '';\n      }\n    }, {\n      key: \"isOnlySpecialChars\",\n      value: function isOnlySpecialChars() {\n        return !this.isEmpty() && this.length === 0;\n      }\n    }, {\n      key: \"_reset\",\n      value: function _reset() {\n        return this._len = 0;\n      }\n    }, {\n      key: \"splitIn\",\n      value: function splitIn(limit) {\n        var trimLeftEachLine = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var buffer, bufferLength, justSkippedSkipChar, lines;\n        buffer = '';\n        bufferLength = 0;\n        lines = [];\n        justSkippedSkipChar = false;\n\n        self._countChars(this._str, function (char, charLength) {\n          if (bufferLength > limit || bufferLength + charLength > limit) {\n            lines.push(buffer);\n            buffer = '';\n            bufferLength = 0;\n          }\n\n          if (bufferLength === 0 && char === ' ' && !justSkippedSkipChar && trimLeftEachLine) {\n            return justSkippedSkipChar = true;\n          } else {\n            buffer += char;\n            bufferLength += charLength;\n            return justSkippedSkipChar = false;\n          }\n        });\n\n        if (buffer.length > 0) {\n          lines.push(buffer);\n        }\n\n        return lines;\n      }\n    }, {\n      key: \"trim\",\n      value: function trim() {\n        return new SpecialString(this.str.trim());\n      }\n    }, {\n      key: \"_getLength\",\n      value: function _getLength() {\n        var sum;\n        sum = 0;\n\n        self._countChars(this._str, function (char, charLength) {\n          sum += charLength;\n        });\n\n        return sum;\n      }\n    }, {\n      key: \"cut\",\n      value: function cut(from, to) {\n        var _this = this;\n\n        var trimLeft = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var after, before, cur, cut;\n\n        if (to == null) {\n          to = this.length;\n        }\n\n        from = parseInt(from);\n\n        if (from >= to) {\n          throw Error(\"`from` shouldn't be larger than `to`\");\n        }\n\n        before = '';\n        after = '';\n        cut = '';\n        cur = 0;\n\n        self._countChars(this._str, function (char, charLength) {\n          if (_this.str === 'ab<tag>') {\n            console.log(charLength, char);\n          }\n\n          if (cur === from && char.match(/^\\s+$/) && trimLeft) {\n            return;\n          }\n\n          if (cur < from) {\n            before += char; // let's be greedy\n          } else if (cur < to || cur + charLength <= to) {\n            cut += char;\n          } else {\n            after += char;\n          }\n\n          cur += charLength;\n        });\n\n        this._str = before + after;\n\n        this._reset();\n\n        return new SpecialString(cut);\n      }\n    }], [{\n      key: \"_countChars\",\n      value: function _countChars(text, cb) {\n        var char, charLength, m;\n\n        while (text.length !== 0) {\n          if (m = text.match(self._tagRx)) {\n            char = m[0];\n            charLength = 0;\n            text = text.substr(char.length, text.length);\n          } else if (m = text.match(self._quotedHtmlRx)) {\n            char = m[0];\n            charLength = 1;\n            text = text.substr(char.length, text.length);\n          } else if (text.match(self._tabRx)) {\n            char = \"\\t\";\n            charLength = 8;\n            text = text.substr(1, text.length);\n          } else {\n            char = text[0];\n            charLength = 1;\n            text = text.substr(1, text.length);\n          }\n\n          cb.call(null, char, charLength);\n        }\n      }\n    }]);\n\n    return SpecialString;\n  }();\n\n  ;\n  self = SpecialString;\n  SpecialString._tabRx = /^\\t/;\n  SpecialString._tagRx = /^<[^>]+>/;\n  SpecialString._quotedHtmlRx = /^&(gt|lt|quot|amp|apos|sp);/;\n  return SpecialString;\n}.call(void 0);\n\nref = ['str', 'length'];\n\nfor (i = 0, len = ref.length; i < len; i++) {\n  prop = ref[i];\n\n  (function () {\n    var methodName;\n    methodName = '_get' + prop[0].toUpperCase() + prop.substr(1, prop.length);\n    return SpecialString.prototype.__defineGetter__(prop, function () {\n      return this[methodName]();\n    });\n  })();\n}"]},"metadata":{},"sourceType":"script"}