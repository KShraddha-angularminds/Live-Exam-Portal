{"ast":null,"code":"\"use strict\"; // Generated by CoffeeScript 2.5.1\n\nvar cloneDeep, htmlparser, isPlainObject, merge, _objectToDom, self;\n\nhtmlparser = require('htmlparser2');\n\nvar _require = require('dom-converter');\n\n_objectToDom = _require.objectToDom;\nmerge = require('lodash/merge');\ncloneDeep = require('lodash/cloneDeep');\nisPlainObject = require('lodash/isPlainObject');\nmodule.exports = self = {\n  repeatString: function repeatString(str, times) {\n    var i, j, output, ref;\n    output = '';\n\n    for (i = j = 0, ref = times; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n      output += str;\n    }\n\n    return output;\n  },\n  cloneAndMergeDeep: function cloneAndMergeDeep(base, toAppend) {\n    return merge(cloneDeep(base), toAppend);\n  },\n  toDom: function toDom(subject) {\n    if (typeof subject === 'string') {\n      return self.stringToDom(subject);\n    } else if (isPlainObject(subject)) {\n      return self._objectToDom(subject);\n    } else {\n      throw Error(\"tools.toDom() only supports strings and objects\");\n    }\n  },\n  stringToDom: function stringToDom(string) {\n    var handler, parser;\n    handler = new htmlparser.DomHandler();\n    parser = new htmlparser.Parser(handler);\n    parser.write(string);\n    parser.end();\n    return handler.dom;\n  },\n  _fixQuotesInDom: function _fixQuotesInDom(input) {\n    var j, len, node;\n\n    if (Array.isArray(input)) {\n      for (j = 0, len = input.length; j < len; j++) {\n        node = input[j];\n\n        self._fixQuotesInDom(node);\n      }\n\n      return input;\n    }\n\n    node = input;\n\n    if (node.type === 'text') {\n      return node.data = self._quoteNodeText(node.data);\n    } else {\n      return self._fixQuotesInDom(node.children);\n    }\n  },\n  objectToDom: function objectToDom(o) {\n    if (!Array.isArray(o)) {\n      if (!isPlainObject(o)) {\n        throw Error(\"objectToDom() only accepts a bare object or an array\");\n      }\n    }\n\n    return self._fixQuotesInDom(_objectToDom(o));\n  },\n  quote: function quote(str) {\n    return String(str).replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\\"/g, '&quot;').replace(/\\ /g, '&sp;').replace(/\\n/g, '<br />');\n  },\n  _quoteNodeText: function _quoteNodeText(text) {\n    return String(text).replace(/\\&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\\"/g, '&quot;').replace(/\\ /g, '&sp;').replace(/\\n/g, \"&nl;\");\n  },\n  getCols: function getCols() {\n    var cols, tty; // Based on https://github.com/jonschlinkert/window-size\n\n    tty = require('tty');\n\n    cols = function () {\n      try {\n        if (tty.isatty(1) && tty.isatty(2)) {\n          if (process.stdout.getWindowSize) {\n            return process.stdout.getWindowSize(1)[0];\n          } else if (tty.getWindowSize) {\n            return tty.getWindowSize()[1];\n          } else if (process.stdout.columns) {\n            return process.stdout.columns;\n          }\n        }\n      } catch (error) {}\n    }();\n\n    if (typeof cols === 'number' && cols > 30) {\n      return cols;\n    } else {\n      return 80;\n    }\n  }\n};","map":{"version":3,"sources":["/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/node_modules/renderkid/lib/tools.js"],"names":["cloneDeep","htmlparser","isPlainObject","merge","_objectToDom","self","require","_require","objectToDom","module","exports","repeatString","str","times","i","j","output","ref","cloneAndMergeDeep","base","toAppend","toDom","subject","stringToDom","Error","string","handler","parser","DomHandler","Parser","write","end","dom","_fixQuotesInDom","input","len","node","Array","isArray","length","type","data","_quoteNodeText","children","o","quote","String","replace","text","getCols","cols","tty","isatty","process","stdout","getWindowSize","columns","error"],"mappings":"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","sourcesContent":["\"use strict\";\n\n// Generated by CoffeeScript 2.5.1\nvar cloneDeep, htmlparser, isPlainObject, merge, _objectToDom, self;\n\nhtmlparser = require('htmlparser2');\n\nvar _require = require('dom-converter');\n\n_objectToDom = _require.objectToDom;\nmerge = require('lodash/merge');\ncloneDeep = require('lodash/cloneDeep');\nisPlainObject = require('lodash/isPlainObject');\nmodule.exports = self = {\n  repeatString: function repeatString(str, times) {\n    var i, j, output, ref;\n    output = '';\n\n    for (i = j = 0, ref = times; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n      output += str;\n    }\n\n    return output;\n  },\n  cloneAndMergeDeep: function cloneAndMergeDeep(base, toAppend) {\n    return merge(cloneDeep(base), toAppend);\n  },\n  toDom: function toDom(subject) {\n    if (typeof subject === 'string') {\n      return self.stringToDom(subject);\n    } else if (isPlainObject(subject)) {\n      return self._objectToDom(subject);\n    } else {\n      throw Error(\"tools.toDom() only supports strings and objects\");\n    }\n  },\n  stringToDom: function stringToDom(string) {\n    var handler, parser;\n    handler = new htmlparser.DomHandler();\n    parser = new htmlparser.Parser(handler);\n    parser.write(string);\n    parser.end();\n    return handler.dom;\n  },\n  _fixQuotesInDom: function _fixQuotesInDom(input) {\n    var j, len, node;\n\n    if (Array.isArray(input)) {\n      for (j = 0, len = input.length; j < len; j++) {\n        node = input[j];\n\n        self._fixQuotesInDom(node);\n      }\n\n      return input;\n    }\n\n    node = input;\n\n    if (node.type === 'text') {\n      return node.data = self._quoteNodeText(node.data);\n    } else {\n      return self._fixQuotesInDom(node.children);\n    }\n  },\n  objectToDom: function objectToDom(o) {\n    if (!Array.isArray(o)) {\n      if (!isPlainObject(o)) {\n        throw Error(\"objectToDom() only accepts a bare object or an array\");\n      }\n    }\n\n    return self._fixQuotesInDom(_objectToDom(o));\n  },\n  quote: function quote(str) {\n    return String(str).replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\\"/g, '&quot;').replace(/\\ /g, '&sp;').replace(/\\n/g, '<br />');\n  },\n  _quoteNodeText: function _quoteNodeText(text) {\n    return String(text).replace(/\\&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\\"/g, '&quot;').replace(/\\ /g, '&sp;').replace(/\\n/g, \"&nl;\");\n  },\n  getCols: function getCols() {\n    var cols, tty; // Based on https://github.com/jonschlinkert/window-size\n\n    tty = require('tty');\n\n    cols = function () {\n      try {\n        if (tty.isatty(1) && tty.isatty(2)) {\n          if (process.stdout.getWindowSize) {\n            return process.stdout.getWindowSize(1)[0];\n          } else if (tty.getWindowSize) {\n            return tty.getWindowSize()[1];\n          } else if (process.stdout.columns) {\n            return process.stdout.columns;\n          }\n        }\n      } catch (error) {}\n    }();\n\n    if (typeof cols === 'number' && cols > 30) {\n      return cols;\n    } else {\n      return 80;\n    }\n  }\n};"]},"metadata":{},"sourceType":"script"}