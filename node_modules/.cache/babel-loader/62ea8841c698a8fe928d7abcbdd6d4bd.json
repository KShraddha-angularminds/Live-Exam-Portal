{"ast":null,"code":"\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n} // Generated by CoffeeScript 2.5.1\n\n\nvar AnsiPainter, Layout, RenderKid, Styles, blockStyleApplier, cloneAndMergeDeep, inlineStyleApplier, isPlainObject, stripAnsi, terminalWidth, tools;\ninlineStyleApplier = require('./renderKid/styleApplier/inline');\nblockStyleApplier = require('./renderKid/styleApplier/block');\nisPlainObject = require('lodash/isPlainObject');\n\nvar _require = require('./tools');\n\ncloneAndMergeDeep = _require.cloneAndMergeDeep;\nAnsiPainter = require('./AnsiPainter');\nStyles = require('./renderKid/Styles');\nLayout = require('./Layout');\ntools = require('./tools');\nstripAnsi = require('strip-ansi');\nterminalWidth = require('./tools').getCols();\n\nmodule.exports = RenderKid = function () {\n  var self;\n\n  var RenderKid = /*#__PURE__*/function () {\n    function RenderKid() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _classCallCheck(this, RenderKid);\n\n      this.tools = self.tools;\n      this._config = cloneAndMergeDeep(self._defaultConfig, config);\n\n      this._initStyles();\n    }\n\n    _createClass(RenderKid, [{\n      key: \"_initStyles\",\n      value: function _initStyles() {\n        return this._styles = new Styles();\n      }\n    }, {\n      key: \"style\",\n      value: function style() {\n        return this._styles.setRule.apply(this._styles, arguments);\n      }\n    }, {\n      key: \"_getStyleFor\",\n      value: function _getStyleFor(el) {\n        return this._styles.getStyleFor(el);\n      }\n    }, {\n      key: \"render\",\n      value: function render(input) {\n        var withColors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        return this._paint(this._renderDom(this._toDom(input)), withColors);\n      }\n    }, {\n      key: \"_toDom\",\n      value: function _toDom(input) {\n        if (typeof input === 'string') {\n          return this._parse(input);\n        } else if (isPlainObject(input) || Array.isArray(input)) {\n          return this._objToDom(input);\n        } else {\n          throw Error(\"Invalid input type. Only strings, arrays and objects are accepted\");\n        }\n      }\n    }, {\n      key: \"_objToDom\",\n      value: function _objToDom(o) {\n        var injectFakeRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        if (injectFakeRoot) {\n          o = {\n            body: o\n          };\n        }\n\n        return tools.objectToDom(o);\n      }\n    }, {\n      key: \"_paint\",\n      value: function _paint(text, withColors) {\n        var painted;\n        painted = AnsiPainter.paint(text);\n\n        if (withColors) {\n          return painted;\n        } else {\n          return stripAnsi(painted);\n        }\n      }\n    }, {\n      key: \"_parse\",\n      value: function _parse(string) {\n        var injectFakeRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        if (injectFakeRoot) {\n          string = '<body>' + string + '</body>';\n        }\n\n        return tools.stringToDom(string);\n      }\n    }, {\n      key: \"_renderDom\",\n      value: function _renderDom(dom) {\n        var bodyTag, layout, rootBlock;\n        bodyTag = dom[0];\n        layout = new Layout(this._config.layout);\n        rootBlock = layout.getRootBlock();\n\n        this._renderBlockNode(bodyTag, null, rootBlock);\n\n        return layout.get();\n      }\n    }, {\n      key: \"_renderChildrenOf\",\n      value: function _renderChildrenOf(parentNode, parentBlock) {\n        var i, len, node, nodes;\n        nodes = parentNode.children;\n\n        for (i = 0, len = nodes.length; i < len; i++) {\n          node = nodes[i];\n\n          this._renderNode(node, parentNode, parentBlock);\n        }\n      }\n    }, {\n      key: \"_renderNode\",\n      value: function _renderNode(node, parentNode, parentBlock) {\n        if (node.type === 'text') {\n          this._renderText(node, parentNode, parentBlock);\n        } else if (node.name === 'br') {\n          this._renderBr(node, parentNode, parentBlock);\n        } else if (this._isBlock(node)) {\n          this._renderBlockNode(node, parentNode, parentBlock);\n        } else if (this._isNone(node)) {\n          return;\n        } else {\n          this._renderInlineNode(node, parentNode, parentBlock);\n        }\n      }\n    }, {\n      key: \"_renderText\",\n      value: function _renderText(node, parentNode, parentBlock) {\n        var ref, text;\n        text = node.data;\n        text = text.replace(/\\s+/g, ' '); // let's only trim if the parent is an inline element\n\n        if ((parentNode != null ? (ref = parentNode.styles) != null ? ref.display : void 0 : void 0) !== 'inline') {\n          text = text.trim();\n        }\n\n        if (text.length === 0) {\n          return;\n        }\n\n        text = text.replace(/&nl;/g, \"\\n\");\n        return parentBlock.write(text);\n      }\n    }, {\n      key: \"_renderBlockNode\",\n      value: function _renderBlockNode(node, parentNode, parentBlock) {\n        var after, before, block, blockConfig;\n\n        var _blockStyleApplier$ap = blockStyleApplier.applyTo(node, this._getStyleFor(node));\n\n        before = _blockStyleApplier$ap.before;\n        after = _blockStyleApplier$ap.after;\n        blockConfig = _blockStyleApplier$ap.blockConfig;\n        block = parentBlock.openBlock(blockConfig);\n\n        if (before !== '') {\n          block.write(before);\n        }\n\n        this._renderChildrenOf(node, block);\n\n        if (after !== '') {\n          block.write(after);\n        }\n\n        return block.close();\n      }\n    }, {\n      key: \"_renderInlineNode\",\n      value: function _renderInlineNode(node, parentNode, parentBlock) {\n        var after, before;\n\n        var _inlineStyleApplier$a = inlineStyleApplier.applyTo(node, this._getStyleFor(node));\n\n        before = _inlineStyleApplier$a.before;\n        after = _inlineStyleApplier$a.after;\n\n        if (before !== '') {\n          parentBlock.write(before);\n        }\n\n        this._renderChildrenOf(node, parentBlock);\n\n        if (after !== '') {\n          return parentBlock.write(after);\n        }\n      }\n    }, {\n      key: \"_renderBr\",\n      value: function _renderBr(node, parentNode, parentBlock) {\n        return parentBlock.write(\"\\n\");\n      }\n    }, {\n      key: \"_isBlock\",\n      value: function _isBlock(node) {\n        return !(node.type === 'text' || node.name === 'br' || this._getStyleFor(node).display !== 'block');\n      }\n    }, {\n      key: \"_isNone\",\n      value: function _isNone(node) {\n        return !(node.type === 'text' || node.name === 'br' || this._getStyleFor(node).display !== 'none');\n      }\n    }]);\n\n    return RenderKid;\n  }();\n\n  ;\n  self = RenderKid;\n  RenderKid.AnsiPainter = AnsiPainter;\n  RenderKid.Layout = Layout;\n  RenderKid.quote = tools.quote;\n  RenderKid.tools = tools;\n  RenderKid._defaultConfig = {\n    layout: {\n      terminalWidth: terminalWidth\n    }\n  };\n  return RenderKid;\n}.call(void 0);","map":{"version":3,"sources":["/home/am-pc-05-other/React/latest Live exam Portal/Live-Exam-Portal/node_modules/renderkid/lib/RenderKid.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","AnsiPainter","Layout","RenderKid","Styles","blockStyleApplier","cloneAndMergeDeep","inlineStyleApplier","isPlainObject","stripAnsi","terminalWidth","tools","require","_require","getCols","module","exports","self","config","arguments","undefined","_config","_defaultConfig","_initStyles","value","_styles","style","setRule","apply","_getStyleFor","el","getStyleFor","render","input","withColors","_paint","_renderDom","_toDom","_parse","Array","isArray","_objToDom","Error","o","injectFakeRoot","body","objectToDom","text","painted","paint","string","stringToDom","dom","bodyTag","layout","rootBlock","getRootBlock","_renderBlockNode","get","_renderChildrenOf","parentNode","parentBlock","len","node","nodes","children","_renderNode","type","_renderText","name","_renderBr","_isBlock","_isNone","_renderInlineNode","ref","data","replace","styles","display","trim","write","after","before","block","blockConfig","_blockStyleApplier$ap","applyTo","openBlock","close","_inlineStyleApplier$a","quote","call"],"mappings":"AAAA;;AAEA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,iBAAT,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AAAE,QAAIE,UAAU,GAAGH,KAAK,CAACC,CAAD,CAAtB;AAA2BE,IAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AAAwDD,IAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AAAgC,QAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AAA4BC,IAAAA,MAAM,CAACC,cAAP,CAAsBT,MAAtB,EAA8BI,UAAU,CAACM,GAAzC,EAA8CN,UAA9C;AAA4D;AAAE;;AAE7T,SAASO,YAAT,CAAsBd,WAAtB,EAAmCe,UAAnC,EAA+CC,WAA/C,EAA4D;AAAE,MAAID,UAAJ,EAAgBb,iBAAiB,CAACF,WAAW,CAACiB,SAAb,EAAwBF,UAAxB,CAAjB;AAAsD,MAAIC,WAAJ,EAAiBd,iBAAiB,CAACF,WAAD,EAAcgB,WAAd,CAAjB;AAA6C,SAAOhB,WAAP;AAAqB,C,CAEvN;;;AACA,IAAIkB,WAAJ,EAAiBC,MAAjB,EAAyBC,SAAzB,EAAoCC,MAApC,EAA4CC,iBAA5C,EAA+DC,iBAA/D,EAAkFC,kBAAlF,EAAsGC,aAAtG,EAAqHC,SAArH,EAAgIC,aAAhI,EAA+IC,KAA/I;AACAJ,kBAAkB,GAAGK,OAAO,CAAC,iCAAD,CAA5B;AACAP,iBAAiB,GAAGO,OAAO,CAAC,gCAAD,CAA3B;AACAJ,aAAa,GAAGI,OAAO,CAAC,sBAAD,CAAvB;;AAEA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,SAAD,CAAtB;;AAEAN,iBAAiB,GAAGO,QAAQ,CAACP,iBAA7B;AACAL,WAAW,GAAGW,OAAO,CAAC,eAAD,CAArB;AACAR,MAAM,GAAGQ,OAAO,CAAC,oBAAD,CAAhB;AACAV,MAAM,GAAGU,OAAO,CAAC,UAAD,CAAhB;AACAD,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAf;AACAH,SAAS,GAAGG,OAAO,CAAC,YAAD,CAAnB;AACAF,aAAa,GAAGE,OAAO,CAAC,SAAD,CAAP,CAAmBE,OAAnB,EAAhB;;AAEAC,MAAM,CAACC,OAAP,GAAiBb,SAAS,GAAG,YAAY;AACvC,MAAIc,IAAJ;;AAEA,MAAId,SAAS,GAAG,aAAa,YAAY;AACvC,aAASA,SAAT,GAAqB;AACnB,UAAIe,MAAM,GAAGC,SAAS,CAAC9B,MAAV,GAAmB,CAAnB,IAAwB8B,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAjF;;AAEAtC,MAAAA,eAAe,CAAC,IAAD,EAAOsB,SAAP,CAAf;;AAEA,WAAKQ,KAAL,GAAaM,IAAI,CAACN,KAAlB;AACA,WAAKU,OAAL,GAAef,iBAAiB,CAACW,IAAI,CAACK,cAAN,EAAsBJ,MAAtB,CAAhC;;AAEA,WAAKK,WAAL;AACD;;AAED1B,IAAAA,YAAY,CAACM,SAAD,EAAY,CAAC;AACvBP,MAAAA,GAAG,EAAE,aADkB;AAEvB4B,MAAAA,KAAK,EAAE,SAASD,WAAT,GAAuB;AAC5B,eAAO,KAAKE,OAAL,GAAe,IAAIrB,MAAJ,EAAtB;AACD;AAJsB,KAAD,EAKrB;AACDR,MAAAA,GAAG,EAAE,OADJ;AAED4B,MAAAA,KAAK,EAAE,SAASE,KAAT,GAAiB;AACtB,eAAO,KAAKD,OAAL,CAAaE,OAAb,CAAqBC,KAArB,CAA2B,KAAKH,OAAhC,EAAyCN,SAAzC,CAAP;AACD;AAJA,KALqB,EAUrB;AACDvB,MAAAA,GAAG,EAAE,cADJ;AAED4B,MAAAA,KAAK,EAAE,SAASK,YAAT,CAAsBC,EAAtB,EAA0B;AAC/B,eAAO,KAAKL,OAAL,CAAaM,WAAb,CAAyBD,EAAzB,CAAP;AACD;AAJA,KAVqB,EAerB;AACDlC,MAAAA,GAAG,EAAE,QADJ;AAED4B,MAAAA,KAAK,EAAE,SAASQ,MAAT,CAAgBC,KAAhB,EAAuB;AAC5B,YAAIC,UAAU,GAAGf,SAAS,CAAC9B,MAAV,GAAmB,CAAnB,IAAwB8B,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAArF;AACA,eAAO,KAAKgB,MAAL,CAAY,KAAKC,UAAL,CAAgB,KAAKC,MAAL,CAAYJ,KAAZ,CAAhB,CAAZ,EAAiDC,UAAjD,CAAP;AACD;AALA,KAfqB,EAqBrB;AACDtC,MAAAA,GAAG,EAAE,QADJ;AAED4B,MAAAA,KAAK,EAAE,SAASa,MAAT,CAAgBJ,KAAhB,EAAuB;AAC5B,YAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,iBAAO,KAAKK,MAAL,CAAYL,KAAZ,CAAP;AACD,SAFD,MAEO,IAAIzB,aAAa,CAACyB,KAAD,CAAb,IAAwBM,KAAK,CAACC,OAAN,CAAcP,KAAd,CAA5B,EAAkD;AACvD,iBAAO,KAAKQ,SAAL,CAAeR,KAAf,CAAP;AACD,SAFM,MAEA;AACL,gBAAMS,KAAK,CAAC,mEAAD,CAAX;AACD;AACF;AAVA,KArBqB,EAgCrB;AACD9C,MAAAA,GAAG,EAAE,WADJ;AAED4B,MAAAA,KAAK,EAAE,SAASiB,SAAT,CAAmBE,CAAnB,EAAsB;AAC3B,YAAIC,cAAc,GAAGzB,SAAS,CAAC9B,MAAV,GAAmB,CAAnB,IAAwB8B,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAAzF;;AAEA,YAAIyB,cAAJ,EAAoB;AAClBD,UAAAA,CAAC,GAAG;AACFE,YAAAA,IAAI,EAAEF;AADJ,WAAJ;AAGD;;AAED,eAAOhC,KAAK,CAACmC,WAAN,CAAkBH,CAAlB,CAAP;AACD;AAZA,KAhCqB,EA6CrB;AACD/C,MAAAA,GAAG,EAAE,QADJ;AAED4B,MAAAA,KAAK,EAAE,SAASW,MAAT,CAAgBY,IAAhB,EAAsBb,UAAtB,EAAkC;AACvC,YAAIc,OAAJ;AACAA,QAAAA,OAAO,GAAG/C,WAAW,CAACgD,KAAZ,CAAkBF,IAAlB,CAAV;;AAEA,YAAIb,UAAJ,EAAgB;AACd,iBAAOc,OAAP;AACD,SAFD,MAEO;AACL,iBAAOvC,SAAS,CAACuC,OAAD,CAAhB;AACD;AACF;AAXA,KA7CqB,EAyDrB;AACDpD,MAAAA,GAAG,EAAE,QADJ;AAED4B,MAAAA,KAAK,EAAE,SAASc,MAAT,CAAgBY,MAAhB,EAAwB;AAC7B,YAAIN,cAAc,GAAGzB,SAAS,CAAC9B,MAAV,GAAmB,CAAnB,IAAwB8B,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAAzF;;AAEA,YAAIyB,cAAJ,EAAoB;AAClBM,UAAAA,MAAM,GAAG,WAAWA,MAAX,GAAoB,SAA7B;AACD;;AAED,eAAOvC,KAAK,CAACwC,WAAN,CAAkBD,MAAlB,CAAP;AACD;AAVA,KAzDqB,EAoErB;AACDtD,MAAAA,GAAG,EAAE,YADJ;AAED4B,MAAAA,KAAK,EAAE,SAASY,UAAT,CAAoBgB,GAApB,EAAyB;AAC9B,YAAIC,OAAJ,EAAaC,MAAb,EAAqBC,SAArB;AACAF,QAAAA,OAAO,GAAGD,GAAG,CAAC,CAAD,CAAb;AACAE,QAAAA,MAAM,GAAG,IAAIpD,MAAJ,CAAW,KAAKmB,OAAL,CAAaiC,MAAxB,CAAT;AACAC,QAAAA,SAAS,GAAGD,MAAM,CAACE,YAAP,EAAZ;;AAEA,aAAKC,gBAAL,CAAsBJ,OAAtB,EAA+B,IAA/B,EAAqCE,SAArC;;AAEA,eAAOD,MAAM,CAACI,GAAP,EAAP;AACD;AAXA,KApEqB,EAgFrB;AACD9D,MAAAA,GAAG,EAAE,mBADJ;AAED4B,MAAAA,KAAK,EAAE,SAASmC,iBAAT,CAA2BC,UAA3B,EAAuCC,WAAvC,EAAoD;AACzD,YAAIzE,CAAJ,EAAO0E,GAAP,EAAYC,IAAZ,EAAkBC,KAAlB;AACAA,QAAAA,KAAK,GAAGJ,UAAU,CAACK,QAAnB;;AAEA,aAAK7E,CAAC,GAAG,CAAJ,EAAO0E,GAAG,GAAGE,KAAK,CAAC3E,MAAxB,EAAgCD,CAAC,GAAG0E,GAApC,EAAyC1E,CAAC,EAA1C,EAA8C;AAC5C2E,UAAAA,IAAI,GAAGC,KAAK,CAAC5E,CAAD,CAAZ;;AAEA,eAAK8E,WAAL,CAAiBH,IAAjB,EAAuBH,UAAvB,EAAmCC,WAAnC;AACD;AACF;AAXA,KAhFqB,EA4FrB;AACDjE,MAAAA,GAAG,EAAE,aADJ;AAED4B,MAAAA,KAAK,EAAE,SAAS0C,WAAT,CAAqBH,IAArB,EAA2BH,UAA3B,EAAuCC,WAAvC,EAAoD;AACzD,YAAIE,IAAI,CAACI,IAAL,KAAc,MAAlB,EAA0B;AACxB,eAAKC,WAAL,CAAiBL,IAAjB,EAAuBH,UAAvB,EAAmCC,WAAnC;AACD,SAFD,MAEO,IAAIE,IAAI,CAACM,IAAL,KAAc,IAAlB,EAAwB;AAC7B,eAAKC,SAAL,CAAeP,IAAf,EAAqBH,UAArB,EAAiCC,WAAjC;AACD,SAFM,MAEA,IAAI,KAAKU,QAAL,CAAcR,IAAd,CAAJ,EAAyB;AAC9B,eAAKN,gBAAL,CAAsBM,IAAtB,EAA4BH,UAA5B,EAAwCC,WAAxC;AACD,SAFM,MAEA,IAAI,KAAKW,OAAL,CAAaT,IAAb,CAAJ,EAAwB;AAC7B;AACD,SAFM,MAEA;AACL,eAAKU,iBAAL,CAAuBV,IAAvB,EAA6BH,UAA7B,EAAyCC,WAAzC;AACD;AACF;AAdA,KA5FqB,EA2GrB;AACDjE,MAAAA,GAAG,EAAE,aADJ;AAED4B,MAAAA,KAAK,EAAE,SAAS4C,WAAT,CAAqBL,IAArB,EAA2BH,UAA3B,EAAuCC,WAAvC,EAAoD;AACzD,YAAIa,GAAJ,EAAS3B,IAAT;AACAA,QAAAA,IAAI,GAAGgB,IAAI,CAACY,IAAZ;AACA5B,QAAAA,IAAI,GAAGA,IAAI,CAAC6B,OAAL,CAAa,MAAb,EAAqB,GAArB,CAAP,CAHyD,CAGvB;;AAElC,YAAI,CAAChB,UAAU,IAAI,IAAd,GAAqB,CAACc,GAAG,GAAGd,UAAU,CAACiB,MAAlB,KAA6B,IAA7B,GAAoCH,GAAG,CAACI,OAAxC,GAAkD,KAAK,CAA5E,GAAgF,KAAK,CAAtF,MAA6F,QAAjG,EAA2G;AACzG/B,UAAAA,IAAI,GAAGA,IAAI,CAACgC,IAAL,EAAP;AACD;;AAED,YAAIhC,IAAI,CAAC1D,MAAL,KAAgB,CAApB,EAAuB;AACrB;AACD;;AAED0D,QAAAA,IAAI,GAAGA,IAAI,CAAC6B,OAAL,CAAa,OAAb,EAAsB,IAAtB,CAAP;AACA,eAAOf,WAAW,CAACmB,KAAZ,CAAkBjC,IAAlB,CAAP;AACD;AAjBA,KA3GqB,EA6HrB;AACDnD,MAAAA,GAAG,EAAE,kBADJ;AAED4B,MAAAA,KAAK,EAAE,SAASiC,gBAAT,CAA0BM,IAA1B,EAAgCH,UAAhC,EAA4CC,WAA5C,EAAyD;AAC9D,YAAIoB,KAAJ,EAAWC,MAAX,EAAmBC,KAAnB,EAA0BC,WAA1B;;AAEA,YAAIC,qBAAqB,GAAGhF,iBAAiB,CAACiF,OAAlB,CAA0BvB,IAA1B,EAAgC,KAAKlC,YAAL,CAAkBkC,IAAlB,CAAhC,CAA5B;;AAEAmB,QAAAA,MAAM,GAAGG,qBAAqB,CAACH,MAA/B;AACAD,QAAAA,KAAK,GAAGI,qBAAqB,CAACJ,KAA9B;AACAG,QAAAA,WAAW,GAAGC,qBAAqB,CAACD,WAApC;AACAD,QAAAA,KAAK,GAAGtB,WAAW,CAAC0B,SAAZ,CAAsBH,WAAtB,CAAR;;AAEA,YAAIF,MAAM,KAAK,EAAf,EAAmB;AACjBC,UAAAA,KAAK,CAACH,KAAN,CAAYE,MAAZ;AACD;;AAED,aAAKvB,iBAAL,CAAuBI,IAAvB,EAA6BoB,KAA7B;;AAEA,YAAIF,KAAK,KAAK,EAAd,EAAkB;AAChBE,UAAAA,KAAK,CAACH,KAAN,CAAYC,KAAZ;AACD;;AAED,eAAOE,KAAK,CAACK,KAAN,EAAP;AACD;AAvBA,KA7HqB,EAqJrB;AACD5F,MAAAA,GAAG,EAAE,mBADJ;AAED4B,MAAAA,KAAK,EAAE,SAASiD,iBAAT,CAA2BV,IAA3B,EAAiCH,UAAjC,EAA6CC,WAA7C,EAA0D;AAC/D,YAAIoB,KAAJ,EAAWC,MAAX;;AAEA,YAAIO,qBAAqB,GAAGlF,kBAAkB,CAAC+E,OAAnB,CAA2BvB,IAA3B,EAAiC,KAAKlC,YAAL,CAAkBkC,IAAlB,CAAjC,CAA5B;;AAEAmB,QAAAA,MAAM,GAAGO,qBAAqB,CAACP,MAA/B;AACAD,QAAAA,KAAK,GAAGQ,qBAAqB,CAACR,KAA9B;;AAEA,YAAIC,MAAM,KAAK,EAAf,EAAmB;AACjBrB,UAAAA,WAAW,CAACmB,KAAZ,CAAkBE,MAAlB;AACD;;AAED,aAAKvB,iBAAL,CAAuBI,IAAvB,EAA6BF,WAA7B;;AAEA,YAAIoB,KAAK,KAAK,EAAd,EAAkB;AAChB,iBAAOpB,WAAW,CAACmB,KAAZ,CAAkBC,KAAlB,CAAP;AACD;AACF;AAnBA,KArJqB,EAyKrB;AACDrF,MAAAA,GAAG,EAAE,WADJ;AAED4B,MAAAA,KAAK,EAAE,SAAS8C,SAAT,CAAmBP,IAAnB,EAAyBH,UAAzB,EAAqCC,WAArC,EAAkD;AACvD,eAAOA,WAAW,CAACmB,KAAZ,CAAkB,IAAlB,CAAP;AACD;AAJA,KAzKqB,EA8KrB;AACDpF,MAAAA,GAAG,EAAE,UADJ;AAED4B,MAAAA,KAAK,EAAE,SAAS+C,QAAT,CAAkBR,IAAlB,EAAwB;AAC7B,eAAO,EAAEA,IAAI,CAACI,IAAL,KAAc,MAAd,IAAwBJ,IAAI,CAACM,IAAL,KAAc,IAAtC,IAA8C,KAAKxC,YAAL,CAAkBkC,IAAlB,EAAwBe,OAAxB,KAAoC,OAApF,CAAP;AACD;AAJA,KA9KqB,EAmLrB;AACDlF,MAAAA,GAAG,EAAE,SADJ;AAED4B,MAAAA,KAAK,EAAE,SAASgD,OAAT,CAAiBT,IAAjB,EAAuB;AAC5B,eAAO,EAAEA,IAAI,CAACI,IAAL,KAAc,MAAd,IAAwBJ,IAAI,CAACM,IAAL,KAAc,IAAtC,IAA8C,KAAKxC,YAAL,CAAkBkC,IAAlB,EAAwBe,OAAxB,KAAoC,MAApF,CAAP;AACD;AAJA,KAnLqB,CAAZ,CAAZ;;AA0LA,WAAO3E,SAAP;AACD,GAvM4B,EAA7B;;AAyMA;AACAc,EAAAA,IAAI,GAAGd,SAAP;AACAA,EAAAA,SAAS,CAACF,WAAV,GAAwBA,WAAxB;AACAE,EAAAA,SAAS,CAACD,MAAV,GAAmBA,MAAnB;AACAC,EAAAA,SAAS,CAACuF,KAAV,GAAkB/E,KAAK,CAAC+E,KAAxB;AACAvF,EAAAA,SAAS,CAACQ,KAAV,GAAkBA,KAAlB;AACAR,EAAAA,SAAS,CAACmB,cAAV,GAA2B;AACzBgC,IAAAA,MAAM,EAAE;AACN5C,MAAAA,aAAa,EAAEA;AADT;AADiB,GAA3B;AAKA,SAAOP,SAAP;AACD,CAxN4B,CAwN3BwF,IAxN2B,CAwNtB,KAAK,CAxNiB,CAA7B","sourcesContent":["\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// Generated by CoffeeScript 2.5.1\nvar AnsiPainter, Layout, RenderKid, Styles, blockStyleApplier, cloneAndMergeDeep, inlineStyleApplier, isPlainObject, stripAnsi, terminalWidth, tools;\ninlineStyleApplier = require('./renderKid/styleApplier/inline');\nblockStyleApplier = require('./renderKid/styleApplier/block');\nisPlainObject = require('lodash/isPlainObject');\n\nvar _require = require('./tools');\n\ncloneAndMergeDeep = _require.cloneAndMergeDeep;\nAnsiPainter = require('./AnsiPainter');\nStyles = require('./renderKid/Styles');\nLayout = require('./Layout');\ntools = require('./tools');\nstripAnsi = require('strip-ansi');\nterminalWidth = require('./tools').getCols();\n\nmodule.exports = RenderKid = function () {\n  var self;\n\n  var RenderKid = /*#__PURE__*/function () {\n    function RenderKid() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _classCallCheck(this, RenderKid);\n\n      this.tools = self.tools;\n      this._config = cloneAndMergeDeep(self._defaultConfig, config);\n\n      this._initStyles();\n    }\n\n    _createClass(RenderKid, [{\n      key: \"_initStyles\",\n      value: function _initStyles() {\n        return this._styles = new Styles();\n      }\n    }, {\n      key: \"style\",\n      value: function style() {\n        return this._styles.setRule.apply(this._styles, arguments);\n      }\n    }, {\n      key: \"_getStyleFor\",\n      value: function _getStyleFor(el) {\n        return this._styles.getStyleFor(el);\n      }\n    }, {\n      key: \"render\",\n      value: function render(input) {\n        var withColors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        return this._paint(this._renderDom(this._toDom(input)), withColors);\n      }\n    }, {\n      key: \"_toDom\",\n      value: function _toDom(input) {\n        if (typeof input === 'string') {\n          return this._parse(input);\n        } else if (isPlainObject(input) || Array.isArray(input)) {\n          return this._objToDom(input);\n        } else {\n          throw Error(\"Invalid input type. Only strings, arrays and objects are accepted\");\n        }\n      }\n    }, {\n      key: \"_objToDom\",\n      value: function _objToDom(o) {\n        var injectFakeRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        if (injectFakeRoot) {\n          o = {\n            body: o\n          };\n        }\n\n        return tools.objectToDom(o);\n      }\n    }, {\n      key: \"_paint\",\n      value: function _paint(text, withColors) {\n        var painted;\n        painted = AnsiPainter.paint(text);\n\n        if (withColors) {\n          return painted;\n        } else {\n          return stripAnsi(painted);\n        }\n      }\n    }, {\n      key: \"_parse\",\n      value: function _parse(string) {\n        var injectFakeRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        if (injectFakeRoot) {\n          string = '<body>' + string + '</body>';\n        }\n\n        return tools.stringToDom(string);\n      }\n    }, {\n      key: \"_renderDom\",\n      value: function _renderDom(dom) {\n        var bodyTag, layout, rootBlock;\n        bodyTag = dom[0];\n        layout = new Layout(this._config.layout);\n        rootBlock = layout.getRootBlock();\n\n        this._renderBlockNode(bodyTag, null, rootBlock);\n\n        return layout.get();\n      }\n    }, {\n      key: \"_renderChildrenOf\",\n      value: function _renderChildrenOf(parentNode, parentBlock) {\n        var i, len, node, nodes;\n        nodes = parentNode.children;\n\n        for (i = 0, len = nodes.length; i < len; i++) {\n          node = nodes[i];\n\n          this._renderNode(node, parentNode, parentBlock);\n        }\n      }\n    }, {\n      key: \"_renderNode\",\n      value: function _renderNode(node, parentNode, parentBlock) {\n        if (node.type === 'text') {\n          this._renderText(node, parentNode, parentBlock);\n        } else if (node.name === 'br') {\n          this._renderBr(node, parentNode, parentBlock);\n        } else if (this._isBlock(node)) {\n          this._renderBlockNode(node, parentNode, parentBlock);\n        } else if (this._isNone(node)) {\n          return;\n        } else {\n          this._renderInlineNode(node, parentNode, parentBlock);\n        }\n      }\n    }, {\n      key: \"_renderText\",\n      value: function _renderText(node, parentNode, parentBlock) {\n        var ref, text;\n        text = node.data;\n        text = text.replace(/\\s+/g, ' '); // let's only trim if the parent is an inline element\n\n        if ((parentNode != null ? (ref = parentNode.styles) != null ? ref.display : void 0 : void 0) !== 'inline') {\n          text = text.trim();\n        }\n\n        if (text.length === 0) {\n          return;\n        }\n\n        text = text.replace(/&nl;/g, \"\\n\");\n        return parentBlock.write(text);\n      }\n    }, {\n      key: \"_renderBlockNode\",\n      value: function _renderBlockNode(node, parentNode, parentBlock) {\n        var after, before, block, blockConfig;\n\n        var _blockStyleApplier$ap = blockStyleApplier.applyTo(node, this._getStyleFor(node));\n\n        before = _blockStyleApplier$ap.before;\n        after = _blockStyleApplier$ap.after;\n        blockConfig = _blockStyleApplier$ap.blockConfig;\n        block = parentBlock.openBlock(blockConfig);\n\n        if (before !== '') {\n          block.write(before);\n        }\n\n        this._renderChildrenOf(node, block);\n\n        if (after !== '') {\n          block.write(after);\n        }\n\n        return block.close();\n      }\n    }, {\n      key: \"_renderInlineNode\",\n      value: function _renderInlineNode(node, parentNode, parentBlock) {\n        var after, before;\n\n        var _inlineStyleApplier$a = inlineStyleApplier.applyTo(node, this._getStyleFor(node));\n\n        before = _inlineStyleApplier$a.before;\n        after = _inlineStyleApplier$a.after;\n\n        if (before !== '') {\n          parentBlock.write(before);\n        }\n\n        this._renderChildrenOf(node, parentBlock);\n\n        if (after !== '') {\n          return parentBlock.write(after);\n        }\n      }\n    }, {\n      key: \"_renderBr\",\n      value: function _renderBr(node, parentNode, parentBlock) {\n        return parentBlock.write(\"\\n\");\n      }\n    }, {\n      key: \"_isBlock\",\n      value: function _isBlock(node) {\n        return !(node.type === 'text' || node.name === 'br' || this._getStyleFor(node).display !== 'block');\n      }\n    }, {\n      key: \"_isNone\",\n      value: function _isNone(node) {\n        return !(node.type === 'text' || node.name === 'br' || this._getStyleFor(node).display !== 'none');\n      }\n    }]);\n\n    return RenderKid;\n  }();\n\n  ;\n  self = RenderKid;\n  RenderKid.AnsiPainter = AnsiPainter;\n  RenderKid.Layout = Layout;\n  RenderKid.quote = tools.quote;\n  RenderKid.tools = tools;\n  RenderKid._defaultConfig = {\n    layout: {\n      terminalWidth: terminalWidth\n    }\n  };\n  return RenderKid;\n}.call(void 0);"]},"metadata":{},"sourceType":"script"}